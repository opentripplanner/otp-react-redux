{"data":{"__schema":{"queryType":{"name":"QueryType"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"ENUM","name":"AbsoluteDirection","description":"The cardinal (compass) direction taken when engaging a walking/driving step.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"EAST","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"NORTH","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"NORTHEAST","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"NORTHWEST","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"SOUTH","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"SOUTHEAST","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"SOUTHWEST","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"WEST","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AccessibilityPreferencesInput","description":"Plan accessibilty preferences. This can be expanded to contain preferences for various accessibility use cases\nin the future. Currently only generic wheelchair preferences are available.","fields":null,"inputFields":[{"name":"wheelchair","description":"Wheelchair related preferences. Note, currently this is the only accessibility mode that is available.","type":{"kind":"INPUT_OBJECT","name":"WheelchairPreferencesInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Agency","description":"A public transport agency","fields":[{"name":"alerts","description":"By default, list of alerts which have an effect on all operations of the agency (e.g. a strike).\nIt's also possible to return other relevant alerts through defining types.","args":[{"name":"types","description":"Returns alerts for these types that are relevant for the agency.\nBy default only returns alerts that have an effect on all operations of the agency (e.g. a strike).","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"AgencyAlertType","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fareUrl","description":"URL to a web page which has information of fares used by this agency","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"gtfsId","description":"Agency feed and id","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lang","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the agency","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"phone","description":"Phone number which customers can use to contact this agency","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"routes","description":"List of routes operated by this agency","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"timezone","description":"ID of the time zone which this agency operates on","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"URL to the home page of the agency","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"AgencyAlertType","description":"Entities, which are relevant for an agency and can contain alerts","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AGENCY","description":"Alerts affecting the agency.","isDeprecated":false,"deprecationReason":null},{"name":"ROUTES","description":"Alerts affecting agency's routes","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE_TYPES","description":"Alerts affecting the different route types of the agency.\nAlerts that affect route types on all agencies can be fetched through Feed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Alert","description":"Alert of a current or upcoming disruption in public transportation","fields":[{"name":"agency","description":"Agency affected by the disruption. Note that this value is present only if the\ndisruption has an effect on all operations of the agency (e.g. in case of a strike).","args":[],"type":{"kind":"OBJECT","name":"Agency","ofType":null},"isDeprecated":true,"deprecationReason":"Alert can have multiple affected entities now instead of there being duplicate alerts\nfor different entities. This will return only one of the affected agencies.\nUse entities instead."},{"name":"alertCause","description":"Alert cause","args":[],"type":{"kind":"ENUM","name":"AlertCauseType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alertDescriptionText","description":"Long description of the alert","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"alertDescriptionTextTranslations","description":"Long descriptions of the alert in all different available languages","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TranslatedString","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"alertEffect","description":"Alert effect","args":[],"type":{"kind":"ENUM","name":"AlertEffectType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alertHash","description":"hashcode from the original GTFS-RT alert","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alertHeaderText","description":"Header of the alert, if available","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alertHeaderTextTranslations","description":"Header of the alert in all different available languages","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TranslatedString","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"alertSeverityLevel","description":"Alert severity level","args":[],"type":{"kind":"ENUM","name":"AlertSeverityLevelType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alertUrl","description":"Url with more information","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alertUrlTranslations","description":"Url with more information in all different available languages","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TranslatedString","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"effectiveEndDate","description":"Time when this alert is not in effect anymore. Format: Unix timestamp in seconds","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"effectiveStartDate","description":"Time when this alert comes into effect. Format: Unix timestamp in seconds","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"entities","description":"Entities affected by the disruption.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"AlertEntity","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"feed","description":"The feed in which this alert was published","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"patterns","description":"Patterns affected by the disruption","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Pattern","ofType":null}},"isDeprecated":true,"deprecationReason":"This will always return an empty list. Use entities instead."},{"name":"route","description":"Route affected by the disruption","args":[],"type":{"kind":"OBJECT","name":"Route","ofType":null},"isDeprecated":true,"deprecationReason":"Alert can have multiple affected entities now instead of there being duplicate alerts\nfor different entities. This will return only one of the affected routes.\nUse entities instead."},{"name":"stop","description":"Stop affected by the disruption","args":[],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":true,"deprecationReason":"Alert can have multiple affected entities now instead of there being duplicate alerts\nfor different entities. This will return only one of the affected stops.\nUse entities instead."},{"name":"trip","description":"Trip affected by the disruption","args":[],"type":{"kind":"OBJECT","name":"Trip","ofType":null},"isDeprecated":true,"deprecationReason":"Alert can have multiple affected entities now instead of there being duplicate alerts\nfor different entities. This will return only one of the affected trips.\nUse entities instead."}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"AlertCauseType","description":"Cause of a alert","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACCIDENT","description":"ACCIDENT","isDeprecated":false,"deprecationReason":null},{"name":"CONSTRUCTION","description":"CONSTRUCTION","isDeprecated":false,"deprecationReason":null},{"name":"DEMONSTRATION","description":"DEMONSTRATION","isDeprecated":false,"deprecationReason":null},{"name":"HOLIDAY","description":"HOLIDAY","isDeprecated":false,"deprecationReason":null},{"name":"MAINTENANCE","description":"MAINTENANCE","isDeprecated":false,"deprecationReason":null},{"name":"MEDICAL_EMERGENCY","description":"MEDICAL_EMERGENCY","isDeprecated":false,"deprecationReason":null},{"name":"OTHER_CAUSE","description":"OTHER_CAUSE","isDeprecated":false,"deprecationReason":null},{"name":"POLICE_ACTIVITY","description":"POLICE_ACTIVITY","isDeprecated":false,"deprecationReason":null},{"name":"STRIKE","description":"STRIKE","isDeprecated":false,"deprecationReason":null},{"name":"TECHNICAL_PROBLEM","description":"TECHNICAL_PROBLEM","isDeprecated":false,"deprecationReason":null},{"name":"UNKNOWN_CAUSE","description":"UNKNOWN_CAUSE","isDeprecated":false,"deprecationReason":null},{"name":"WEATHER","description":"WEATHER","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"AlertEffectType","description":"Effect of a alert","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACCESSIBILITY_ISSUE","description":"ACCESSIBILITY_ISSUE","isDeprecated":false,"deprecationReason":null},{"name":"ADDITIONAL_SERVICE","description":"ADDITIONAL_SERVICE","isDeprecated":false,"deprecationReason":null},{"name":"DETOUR","description":"DETOUR","isDeprecated":false,"deprecationReason":null},{"name":"MODIFIED_SERVICE","description":"MODIFIED_SERVICE","isDeprecated":false,"deprecationReason":null},{"name":"NO_EFFECT","description":"NO_EFFECT","isDeprecated":false,"deprecationReason":null},{"name":"NO_SERVICE","description":"NO_SERVICE","isDeprecated":false,"deprecationReason":null},{"name":"OTHER_EFFECT","description":"OTHER_EFFECT","isDeprecated":false,"deprecationReason":null},{"name":"REDUCED_SERVICE","description":"REDUCED_SERVICE","isDeprecated":false,"deprecationReason":null},{"name":"SIGNIFICANT_DELAYS","description":"SIGNIFICANT_DELAYS","isDeprecated":false,"deprecationReason":null},{"name":"STOP_MOVED","description":"STOP_MOVED","isDeprecated":false,"deprecationReason":null},{"name":"UNKNOWN_EFFECT","description":"UNKNOWN_EFFECT","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"AlertEntity","description":"Entity related to an alert","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Agency","ofType":null},{"kind":"OBJECT","name":"Pattern","ofType":null},{"kind":"OBJECT","name":"Route","ofType":null},{"kind":"OBJECT","name":"RouteType","ofType":null},{"kind":"OBJECT","name":"Stop","ofType":null},{"kind":"OBJECT","name":"StopOnRoute","ofType":null},{"kind":"OBJECT","name":"StopOnTrip","ofType":null},{"kind":"OBJECT","name":"Trip","ofType":null},{"kind":"OBJECT","name":"Unknown","ofType":null}]},{"kind":"ENUM","name":"AlertSeverityLevelType","description":"Severity level of a alert","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INFO","description":"Info alerts are used for informational messages that should not have a\nsignificant effect on user's journey, for example: A single entrance to a\nmetro station is temporarily closed.","isDeprecated":false,"deprecationReason":null},{"name":"SEVERE","description":"Severe alerts are used when a significant part of public transport services is\naffected, for example: All train services are cancelled due to technical problems.","isDeprecated":false,"deprecationReason":null},{"name":"UNKNOWN_SEVERITY","description":"Severity of alert is unknown","isDeprecated":false,"deprecationReason":null},{"name":"WARNING","description":"Warning alerts are used when a single stop or route has a disruption that can\naffect user's journey, for example: All trams on a specific route are running\nwith irregular schedules.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AlightPreferencesInput","description":"Preferences related to alighting from a transit vehicle.","fields":null,"inputFields":[{"name":"slack","description":"What is the required minimum time alighting from a vehicle.","type":{"kind":"SCALAR","name":"Duration","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BicycleParkingPreferencesInput","description":"Preferences for bicycle parking facilities used during the routing.","fields":null,"inputFields":[{"name":"filters","description":"Selection filters to include or exclude parking facilities.\nAn empty list will include all facilities in the routing search.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilter","ofType":null}}},"defaultValue":null},{"name":"preferred","description":"If non-empty every parking facility that doesn't match this set of conditions will\nreceive an extra cost (defined by `unpreferredCost`) and therefore avoided.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilter","ofType":null}}},"defaultValue":null},{"name":"unpreferredCost","description":"If `preferred` is non-empty, using a parking facility that doesn't contain\nat least one of the preferred conditions, will receive this extra cost and therefore avoided if\npreferred options are available.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BicyclePreferencesInput","description":"Preferences related to travel with a bicycle.","fields":null,"inputFields":[{"name":"boardCost","description":"Cost of boarding a vehicle with a bicycle.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null},{"name":"optimization","description":"What criteria should be used when optimizing a cycling route.","type":{"kind":"INPUT_OBJECT","name":"CyclingOptimizationInput","ofType":null},"defaultValue":null},{"name":"parking","description":"Bicycle parking related preferences.","type":{"kind":"INPUT_OBJECT","name":"BicycleParkingPreferencesInput","ofType":null},"defaultValue":null},{"name":"reluctance","description":"A multiplier for how bad cycling is compared to being in transit for equal lengths of time.","type":{"kind":"SCALAR","name":"Reluctance","ofType":null},"defaultValue":null},{"name":"rental","description":"Bicycle rental related preferences.","type":{"kind":"INPUT_OBJECT","name":"BicycleRentalPreferencesInput","ofType":null},"defaultValue":null},{"name":"speed","description":"Maximum speed on flat ground while riding a bicycle. Note, this speed is higher than\nthe average speed will be in itineraries as this is the maximum speed but there are\nfactors that slow down cycling such as crossings, intersections and elevation changes.","type":{"kind":"SCALAR","name":"Speed","ofType":null},"defaultValue":null},{"name":"walk","description":"Walking preferences when walking a bicycle.","type":{"kind":"INPUT_OBJECT","name":"BicycleWalkPreferencesInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BicycleRentalPreferencesInput","description":"Preferences related to bicycle rental (station based or floating bicycle rental).","fields":null,"inputFields":[{"name":"allowedNetworks","description":"Rental networks which can be potentially used as part of an itinerary.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"bannedNetworks","description":"Rental networks which cannot be used as part of an itinerary.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"destinationBicyclePolicy","description":"Is it possible to arrive to the destination with a rented bicycle and does it\ncome with an extra cost.","type":{"kind":"INPUT_OBJECT","name":"DestinationBicyclePolicyInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BicycleWalkPreferencesCostInput","description":"Costs related to walking a bicycle.","fields":null,"inputFields":[{"name":"mountDismountCost","description":"A static cost that is added each time hopping on or off a bicycle to start or end\nbicycle walking. However, this cost is not applied when getting on a rented bicycle\nfor the first time or when getting off the bicycle when returning the bicycle.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null},{"name":"reluctance","description":"A cost multiplier of bicycle walking travel time. The multiplier is for how bad\nwalking the bicycle is compared to being in transit for equal lengths of time.","type":{"kind":"SCALAR","name":"Reluctance","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BicycleWalkPreferencesInput","description":"Preferences for walking a bicycle.","fields":null,"inputFields":[{"name":"cost","description":"Costs related to walking a bicycle.","type":{"kind":"INPUT_OBJECT","name":"BicycleWalkPreferencesCostInput","ofType":null},"defaultValue":null},{"name":"mountDismountTime","description":"How long it takes to hop on or off a bicycle when switching to walking the bicycle\nor when getting on the bicycle again. However, this is not applied when getting\non a rented bicycle for the first time or off the bicycle when returning the bicycle.","type":{"kind":"SCALAR","name":"Duration","ofType":null},"defaultValue":null},{"name":"speed","description":"Maximum walk speed on flat ground. Note, this speed is higher than the average speed\nwill be in itineraries as this is the maximum speed but there are\nfactors that slow down walking such as crossings, intersections and elevation changes.","type":{"kind":"SCALAR","name":"Speed","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BikePark","description":"Bike park represents a location where bicycles can be parked.","fields":[{"name":"bikeParkId","description":"ID of the bike park","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the bike park (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the bike park (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the bike park","args":[{"name":"language","description":"Returns name with the specified language, if found, otherwise returns with some default language.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"openingHours","description":"Opening hours of the parking facility","args":[],"type":{"kind":"OBJECT","name":"OpeningHours","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtime","description":"If true, value of `spacesAvailable` is updated from a real-time source.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"spacesAvailable","description":"Number of spaces available for bikes","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tags","description":"Source specific tags of the bike park, which describe the available features.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BikeRentalStation","description":"Bike rental station represents a location where users can rent bicycles for a fee.","fields":[{"name":"allowDropoff","description":"If true, bikes can be returned to this station if the station has spaces available\nor allows overloading.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowDropoffNow","description":"If true, bikes can be currently returned to this station.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowOverloading","description":"If true, bikes can be returned even if spacesAvailable is zero or bikes > capacity.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowPickup","description":"If true, bikes can be picked up from this station if the station has bikes available.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowPickupNow","description":"If true, bikes can be currently picked up from this station.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bikesAvailable","description":"Number of bikes currently available on the rental station.\nSee field `allowPickupNow` to know if is currently possible to pick up a bike.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"capacity","description":"Nominal capacity (number of racks) of the rental station.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the bike rental station (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the bike rental station (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the bike rental station","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"networks","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operative","description":"If true, station is on and in service.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtime","description":"If true, values of `bikesAvailable` and `spacesAvailable` are updated from a\nreal-time source. If false, values of `bikesAvailable` and `spacesAvailable`\nare always the total capacity divided by two.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rentalUris","description":"Platform-specific URLs to begin renting a bike from this station.","args":[],"type":{"kind":"OBJECT","name":"BikeRentalStationUris","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"spacesAvailable","description":"Number of free spaces currently available on the rental station.\nNote that this value being 0 does not necessarily indicate that bikes cannot be returned\nto this station, as for example it might be possible to leave the bike in the vicinity of\nthe rental station, even if the bike racks don't have any spaces available.\nSee field `allowDropoffNow` to know if is currently possible to return a bike.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"A description of the current state of this bike rental station, e.g. \"Station on\"","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"Use operative instead"},{"name":"stationId","description":"ID of the bike rental station","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BikeRentalStationUris","description":null,"fields":[{"name":"android","description":"A URI that can be passed to an Android app with an {@code android.intent.action.VIEW} Android\nintent to support Android Deep Links.\nMay be null if a rental URI does not exist.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ios","description":"A URI that can be used on iOS to launch the rental app for this station.\nMay be {@code null} if a rental URI does not exist.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"web","description":"A URL that can be used by a web browser to show more information about renting a vehicle at\nthis station.\nMay be {@code null} if a rental URL does not exist.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"BikesAllowed","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ALLOWED","description":"The vehicle being used on this particular trip can accommodate at least one bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"NOT_ALLOWED","description":"No bicycles are allowed on this trip.","isDeprecated":false,"deprecationReason":null},{"name":"NO_INFORMATION","description":"There is no bike information for the trip.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BoardPreferencesInput","description":"Preferences related to boarding a transit vehicle. Note, board costs for each street mode\ncan be found under the street mode preferences.","fields":null,"inputFields":[{"name":"slack","description":"What is the required minimum waiting time at a stop. Setting this value as `PT0S`, for example, can lead\nto passenger missing a connection when the vehicle leaves ahead of time or the passenger arrives to the\nstop later than expected.","type":{"kind":"SCALAR","name":"Duration","ofType":null},"defaultValue":null},{"name":"waitReluctance","description":"A multiplier for how bad waiting at a stop is compared to being in transit for equal lengths of time.","type":{"kind":"SCALAR","name":"Reluctance","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BookingInfo","description":"Booking information for a stop time which has special requirements to use, like calling ahead or\nusing an app.","fields":[{"name":"contactInfo","description":"Contact information for reaching the service provider","args":[],"type":{"kind":"OBJECT","name":"ContactInfo","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dropOffMessage","description":"A message specific to the drop off","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"earliestBookingTime","description":"When is the earliest time the service can be booked.","args":[],"type":{"kind":"OBJECT","name":"BookingTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"latestBookingTime","description":"When is the latest time the service can be booked","args":[],"type":{"kind":"OBJECT","name":"BookingTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"maximumBookingNoticeSeconds","description":"Maximum number of seconds before travel to make the request","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A general message for those booking the service","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimumBookingNoticeSeconds","description":"Minimum number of seconds before travel to make the request","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pickupMessage","description":"A message specific to the pick up","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BookingTime","description":"Temporal restriction for a booking","fields":[{"name":"daysPrior","description":"How many days before the booking","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"time","description":"Time of the booking","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"Built-in Boolean","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CarPark","description":"Car park represents a location where cars can be parked.","fields":[{"name":"carParkId","description":"ID of the car park","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the car park (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the car park (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"maxCapacity","description":"Number of parking spaces at the car park","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the car park","args":[{"name":"language","description":"Returns name with the specified language, if found, otherwise returns with some default language.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"openingHours","description":"Opening hours for the selected dates using the local time of the park.\nEach date can have multiple time spans.","args":[],"type":{"kind":"OBJECT","name":"OpeningHours","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtime","description":"If true, value of `spacesAvailable` is updated from a real-time source.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"spacesAvailable","description":"Number of currently available parking spaces at the car park","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tags","description":"Source specific tags of the car park, which describe the available features.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CarParkingPreferencesInput","description":"Preferences for car parking facilities used during the routing.","fields":null,"inputFields":[{"name":"filters","description":"Selection filters to include or exclude parking facilities.\nAn empty list will include all facilities in the routing search.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilter","ofType":null}}},"defaultValue":null},{"name":"preferred","description":"If non-empty every parking facility that doesn't match this set of conditions will\nreceive an extra cost (defined by `unpreferredCost`) and therefore avoided.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilter","ofType":null}}},"defaultValue":null},{"name":"unpreferredCost","description":"If `preferred` is non-empty, using a parking facility that doesn't contain\nat least one of the preferred conditions, will receive this extra cost and therefore avoided if\npreferred options are available.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CarPreferencesInput","description":"Preferences related to traveling on a car (excluding car travel on transit services such as taxi).","fields":null,"inputFields":[{"name":"parking","description":"Car parking related preferences.","type":{"kind":"INPUT_OBJECT","name":"CarParkingPreferencesInput","ofType":null},"defaultValue":null},{"name":"reluctance","description":"A multiplier for how bad travelling on car is compared to being in transit for equal lengths of time.","type":{"kind":"SCALAR","name":"Reluctance","ofType":null},"defaultValue":null},{"name":"rental","description":"Car rental related preferences.","type":{"kind":"INPUT_OBJECT","name":"CarRentalPreferencesInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CarRentalPreferencesInput","description":"Preferences related to car rental (station based or floating car rental).","fields":null,"inputFields":[{"name":"allowedNetworks","description":"Rental networks which can be potentially used as part of an itinerary.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"bannedNetworks","description":"Rental networks which cannot be used as part of an itinerary.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Cluster","description":"Cluster is a list of stops grouped by name and proximity","fields":[{"name":"gtfsId","description":"ID of the cluster","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the center of this cluster (i.e. average latitude of stops in this cluster)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the center of this cluster (i.e. average longitude of stops in this cluster)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the cluster","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stops","description":"List of stops in the cluster","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ContactInfo","description":"Contact information for booking an on-demand or flexible service.","fields":[{"name":"additionalDetails","description":"Additional notes about the contacting the service provider","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bookingUrl","description":"URL to the booking systems of the service","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"contactPerson","description":"Name of the person to contact","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"eMail","description":"Email to contact","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"faxNumber","description":"Fax number to contact","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"infoUrl","description":"URL containing general information about the service","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"phoneNumber","description":"Phone number to contact","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Coordinate","description":"Coordinate (often referred as coordinates), which is used to specify a location using in the\nWGS84 coordinate system.","fields":[{"name":"latitude","description":"Latitude as a WGS84 format number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"CoordinateValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"longitude","description":"Longitude as a WGS84 format number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"CoordinateValue","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"CoordinateValue","description":"Either a latitude or a longitude as a WGS84 format floating point number.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Coordinates","description":null,"fields":[{"name":"lat","description":"Latitude (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Cost","description":"A static cost that is applied to a certain event or entity. Cost is a positive integer,\nfor example `450`. One cost unit should roughly match a one second travel on transit.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Currency","description":"A currency","fields":[{"name":"code","description":"ISO-4217 currency code, for example `USD` or `EUR`.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"digits","description":"Fractional digits of this currency. A value of 2 would express that in this currency\n100 minor units make up one major unit.\n  \nExpressed more concretely: 100 Euro-cents make up one Euro.\n  \nNote: Some currencies don't even have any fractional digits, for example the Japanese Yen.\n  \nSee also https://en.wikipedia.org/wiki/ISO_4217#Minor_unit_fractions","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CyclingOptimizationInput","description":"What criteria should be used when optimizing a cycling route.","fields":null,"inputFields":[{"name":"triangle","description":"Define optimization by weighing three criteria.","type":{"kind":"INPUT_OBJECT","name":"TriangleCyclingFactorsInput","ofType":null},"defaultValue":null},{"name":"type","description":"Use one of the predefined optimization types.","type":{"kind":"ENUM","name":"CyclingOptimizationType","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CyclingOptimizationType","description":"Predefined optimization alternatives for bicycling routing. For more customization,\none can use the triangle factors.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"FLAT_STREETS","description":"Emphasize flatness over safety or duration of the route. This option was previously called `FLAT`.","isDeprecated":false,"deprecationReason":null},{"name":"SAFEST_STREETS","description":"Completely ignore the elevation differences and prefer the streets, that are evaluated\nto be the safest, even more than with the `SAFE_STREETS` option.\nSafety can also include other concerns such as convenience and general cyclist preferences\nby taking into account road surface etc. This option was previously called `GREENWAYS`.","isDeprecated":false,"deprecationReason":null},{"name":"SAFE_STREETS","description":"Emphasize cycling safety over flatness or duration of the route. Safety can also include other\nconcerns such as convenience and general cyclist preferences by taking into account\nroad surface etc. This option was previously called `SAFE`.","isDeprecated":false,"deprecationReason":null},{"name":"SHORTEST_DURATION","description":"Search for routes with the shortest duration while ignoring the cycling safety\nof the streets (the routes should still follow local regulations). Routes can include\nsteep streets, if they are the fastest alternatives. This option was previously called\n`QUICK`.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"DefaultFareProduct","description":"The standard case of a fare product: it only has a single price to be paid by the passenger\nand no discounts are applied.","fields":[{"name":"id","description":"Identifier for the fare product.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"medium","description":"The 'medium' that this product applies to, for example \"Oyster Card\" or \"Berlin Ticket App\".\n  \nThis communicates to riders that a specific way of buying or keeping this product is required.","args":[],"type":{"kind":"OBJECT","name":"FareMedium","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Human readable name of the product, for example example \"Day pass\" or \"Single ticket\".","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"price","description":"The price of the product","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Money","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"riderCategory","description":"The category of riders this product applies to, for example students or pensioners.","args":[],"type":{"kind":"OBJECT","name":"RiderCategory","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"FareProduct","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DepartureRow","description":"Departure row is a combination of a pattern and a stop of that pattern.\n\nThey are de-duplicated so for each pattern there will only be a single departure row.\n\nThis is useful if you want to show a list of stop/pattern combinations but want each pattern to be\nlisted only once.","fields":[{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the stop (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the stop (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pattern","description":"Pattern of the departure row","args":[],"type":{"kind":"OBJECT","name":"Pattern","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":"Stop from which the departures leave","args":[],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimes","description":"Departures of the pattern from the stop","args":[{"name":"numberOfDepartures","description":"Maximum number of departures to return.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"1"},{"name":"omitCanceled","description":"If false, returns also canceled trips","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"omitNonPickups","description":"If true, only those departures which allow boarding are returned","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"startTime","description":"Return rows departing after this time. Time format: Unix timestamp in seconds. Default: current time.","type":{"kind":"SCALAR","name":"Long","ofType":null},"defaultValue":"0"},{"name":"timeRange","description":"How many seconds ahead to search for departures. Default is one day.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"86400"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DestinationBicyclePolicyInput","description":"Is it possible to arrive to the destination with a rented bicycle and does it\ncome with an extra cost.","fields":null,"inputFields":[{"name":"allowKeeping","description":"For networks that require station drop-off, should the routing engine offer results that go directly to the destination without dropping off the rental bicycle first.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"keepingCost","description":"Cost associated with arriving to the destination with a rented bicycle.\nNo cost is applied if arriving to the destination after dropping off the rented\nbicycle.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DestinationScooterPolicyInput","description":"Is it possible to arrive to the destination with a rented scooter and does it\ncome with an extra cost.","fields":null,"inputFields":[{"name":"allowKeeping","description":"For networks that require station drop-off, should the routing engine offer results that go directly to the destination without dropping off the rental scooter first.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"keepingCost","description":"Cost associated with arriving to the destination with a rented scooter.\nNo cost is applied if arriving to the destination after dropping off the rented\nscooter.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Duration","description":"Duration in a lenient ISO-8601 duration format. Example P2DT2H12M40S, 2d2h12m40s or 1h","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Emissions","description":null,"fields":[{"name":"co2","description":"CO₂ emissions in grams.","args":[],"type":{"kind":"SCALAR","name":"Grams","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"FareMedium","description":"A 'medium' that a fare product applies to, for example cash, 'Oyster Card' or 'DB Navigator App'.","fields":[{"name":"id","description":"ID of the medium","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Human readable name of the medium.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"FareProduct","description":"A fare product (a ticket) to be bought by a passenger","fields":[{"name":"id","description":"Identifier for the fare product.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"medium","description":"The 'medium' that this product applies to, for example \"Oyster Card\" or \"Berlin Ticket App\".\n  \nThis communicates to riders that a specific way of buying or keeping this product is required.","args":[],"type":{"kind":"OBJECT","name":"FareMedium","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Human readable name of the product, for example example \"Day pass\" or \"Single ticket\".","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"riderCategory","description":"The category of riders this product applies to, for example students or pensioners.","args":[],"type":{"kind":"OBJECT","name":"RiderCategory","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"DefaultFareProduct","ofType":null}]},{"kind":"OBJECT","name":"FareProductUse","description":"A container for both a fare product (a ticket) and its relationship to the itinerary.","fields":[{"name":"id","description":"Represents the use of a single instance of a fare product throughout the itinerary. It can\nbe used to cross-reference and de-duplicate fare products that are applicable for more than one\nleg.\n  \nIf you want to uniquely identify the fare product itself (not its use) use the product's `id`.\n  \n### Example: Day pass\n  \nThe day pass is valid for both legs in the itinerary. It is listed as the applicable `product` for each leg,\nand the same FareProductUse id is shown, indicating that only one pass was used/bought.\n  \n**Illustration**\n```yaml\nitinerary:\n  leg1:\n    fareProducts:\n      id: \"AAA\" // id of a FareProductUse instance\n      product:\n        id: \"day-pass\" // product id\n        name: \"Day Pass\"\n  leg2:\n    fareProducts:\n      id: \"AAA\" // identical to leg1. the passenger needs to buy ONE pass, not two.\n      product:\n        id: \"day-pass\"  // product id\n        name: \"Day Pass\"\n```\n  \n**It is the responsibility of the API consumers to display the day pass as a product for the\nentire itinerary rather than two day passes!**\n  \n### Example: Several single tickets\n  \nIf you have two legs and need to buy two single tickets they will appear in each leg with the\nsame `FareProduct.id` but different `FareProductUse.id`.\n  \n**Illustration**\n```yaml\nitinerary:\n  leg1:\n    fareProducts:\n      id: \"AAA\" // id of a FareProductUse instance, not product id\n      product:\n        id: \"single-ticket\" // product id\n        name: \"Single Ticket\"\n  leg2:\n    fareProducts:\n      id: \"BBB\" // different to leg1. the passenger needs to buy two single tickets.\n      product:\n        id: \"single-ticket\"  // product id\n        name: \"Single Ticket\"\n```","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"product","description":"The purchasable fare product","args":[],"type":{"kind":"INTERFACE","name":"FareProduct","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Feed","description":"A feed provides routing data (stops, routes, timetables, etc.) from one or more public transport agencies.","fields":[{"name":"agencies","description":"List of agencies which provide data to this feed","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Agency","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"alerts","description":"Alerts relevant for the feed.","args":[{"name":"types","description":"Returns alerts for these types that are relevant for the feed.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"FeedAlertType","ofType":null}}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"feedId","description":"ID of the feed","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publisher","description":"The publisher of the input transit data.","args":[],"type":{"kind":"OBJECT","name":"FeedPublisher","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"FeedAlertType","description":"Entities, which are relevant for a feed and can contain alerts","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AGENCIES","description":"Alerts affecting the feed's agencies","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE_TYPES","description":"Alerts affecting the route types across the feed.\nThere might be alerts that only affect route types within an agency of the feed,\nand those can be fetched through the Agency.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"FeedPublisher","description":"Feed publisher information","fields":[{"name":"name","description":"Name of feed publisher","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"Web address of feed publisher","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"FilterPlaceType","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BICYCLE_RENT","description":"Old value for VEHICLE_RENT","isDeprecated":true,"deprecationReason":"Use VEHICLE_RENT instead as it's clearer that it also returns rental scooters, cars..."},{"name":"BIKE_PARK","description":"Parking lots (not rental stations) that contain spaces for bicycles","isDeprecated":false,"deprecationReason":null},{"name":"CAR_PARK","description":"Parking lots that contain spaces for cars","isDeprecated":false,"deprecationReason":null},{"name":"DEPARTURE_ROW","description":"Departure rows","isDeprecated":false,"deprecationReason":null},{"name":"STATION","description":"Stations.\nNOTE: if this is selected at the same time as `STOP`, stops that have a parent station will not be returned but their parent stations will be returned instead.","isDeprecated":false,"deprecationReason":null},{"name":"STOP","description":"Stops.\nNOTE: if this is selected at the same time as `STATION`, stops that have a parent station will not be returned but their parent stations will be returned instead.","isDeprecated":false,"deprecationReason":null},{"name":"VEHICLE_RENT","description":"Vehicle (bicycles, scooters, cars ...) rental stations and vehicles","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"Float","description":"Built-in Float","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"FormFactor","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BICYCLE","description":"A bicycle","isDeprecated":false,"deprecationReason":null},{"name":"CAR","description":"An automobile","isDeprecated":false,"deprecationReason":null},{"name":"CARGO_BICYCLE","description":"A bicycle with additional space for cargo","isDeprecated":false,"deprecationReason":null},{"name":"MOPED","description":"A moped that the rider sits on. For a disambiguation see https://github.com/NABSA/gbfs/pull/370#issuecomment-982631989","isDeprecated":false,"deprecationReason":null},{"name":"OTHER","description":"A vehicle that doesn't fit into any other category","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER","description":"A kick scooter that the rider either sits or stands on. Will be deprecated in GBFS v3.0.","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER_SEATED","description":"A kick scooter with a seat","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER_STANDING","description":"A kick scooter that the rider stands on","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"GeoJson","description":"Geographic data structures in JSON format. See: https://geojson.org/","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Geometry","description":null,"fields":[{"name":"length","description":"The number of points in the string","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"points","description":"List of coordinates of in a Google encoded polyline format (see\nhttps://developers.google.com/maps/documentation/utilities/polylinealgorithm)","args":[],"type":{"kind":"SCALAR","name":"Polyline","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Grams","description":"","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"ID","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputBanned","description":null,"fields":null,"inputFields":[{"name":"agencies","description":"A comma-separated list of banned agency ids","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"routes","description":"A comma-separated list of banned route ids","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"trips","description":"A comma-separated list of banned trip ids","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputCoordinates","description":null,"fields":null,"inputFields":[{"name":"address","description":"The name of the place. If specified, the place name in results uses this value instead of `\"Origin\"` or `\"Destination\"`","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"lat","description":"Latitude of the place (WGS 84)","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"locationSlack","description":"The amount of time, in seconds, to spend at this location before venturing forth.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"lon","description":"Longitude of the place (WGS 84)","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"InputField","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DATE_TIME","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"FROM","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"TO","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputFilters","description":null,"fields":null,"inputFields":[{"name":"bikeParks","description":"Bike parks to include by id.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"bikeRentalStations","description":"Bike rentals to include by id (without network identifier).","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"carParks","description":"Car parks to include by id.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"routes","description":"Routes to include by GTFS id.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"stations","description":"Stations to include by GTFS id.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"stops","description":"Stops to include by GTFS id.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputModeWeight","description":null,"fields":null,"inputFields":[{"name":"AIRPLANE","description":"The weight of AIRPLANE traverse mode. Values over 1 add cost to airplane travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"BUS","description":"The weight of BUS traverse mode. Values over 1 add cost to bus travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"CABLE_CAR","description":"The weight of CABLE_CAR traverse mode. Values over 1 add cost to cable car travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"FERRY","description":"The weight of FERRY traverse mode. Values over 1 add cost to ferry travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"FUNICULAR","description":"The weight of FUNICULAR traverse mode. Values over 1 add cost to funicular travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"GONDOLA","description":"The weight of GONDOLA traverse mode. Values over 1 add cost to gondola travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"RAIL","description":"The weight of RAIL traverse mode. Values over 1 add cost to rail travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"SUBWAY","description":"The weight of SUBWAY traverse mode. Values over 1 add cost to subway travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"TRAM","description":"The weight of TRAM traverse mode. Values over 1 add cost to tram travel and values under 1 decrease cost","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputPreferred","description":null,"fields":null,"inputFields":[{"name":"agencies","description":"A comma-separated list of ids of the agencies preferred by the user.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"otherThanPreferredRoutesPenalty","description":"Penalty added for using every route that is not preferred if user set any\nroute as preferred. We return number of seconds that we are willing to wait\nfor preferred route.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"routes","description":"A comma-separated list of ids of the routes preferred by the user.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputTriangle","description":"Relative importances of optimization factors. Only effective for bicycling legs.\nInvariant: `timeFactor + slopeFactor + safetyFactor == 1`","fields":null,"inputFields":[{"name":"safetyFactor","description":"Relative importance of safety","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"slopeFactor","description":"Relative importance of flat terrain","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"timeFactor","description":"Relative importance of duration","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InputUnpreferred","description":null,"fields":null,"inputFields":[{"name":"agencies","description":"A comma-separated list of ids of the agencies unpreferred by the user.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"routes","description":"A comma-separated list of ids of the routes unpreferred by the user.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"unpreferredCost","description":"An cost function used to calculate penalty for an unpreferred route/agency. Function should return\nnumber of seconds that we are willing to wait for unpreferred route/agency.\nString must be of the format:\n`A + B x`, where A is fixed penalty and B is a multiplier of transit leg travel time x.\nFor example: `600 + 2.0 x`","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Int","description":"Built-in Int","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Itinerary","description":null,"fields":[{"name":"accessibilityScore","description":"Computes a numeric accessibility score between 0 and 1.\n  \nThe closer the value is to 1 the better the wheelchair-accessibility of this itinerary is.\nA value of `null` means that no score has been computed, not that the leg is inaccessible.\n  \nMore information is available in the [feature documentation](https://docs.opentripplanner.org/en/dev-2.x/sandbox/IBIAccessibilityScore/).","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"arrivedAtDestinationWithRentedBicycle","description":"Does the itinerary end without dropping off the rented bicycle:","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"duration","description":"Duration of the trip on this itinerary, in seconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"elevationGained","description":"How much elevation is gained, in total, over the course of the itinerary, in meters.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"elevationLost","description":"How much elevation is lost, in total, over the course of the itinerary, in meters.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"emissionsPerPerson","description":"Emissions of this itinerary per traveler.","args":[],"type":{"kind":"OBJECT","name":"Emissions","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"end","description":"Time when the user leaves arrives at the destination.","args":[],"type":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"endTime","description":"Time when the user arrives to the destination. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":true,"deprecationReason":"Use `end` instead which includes timezone information."},{"name":"fares","description":"Information about the fares for this itinerary. This is primarily a GTFS Fares V1 interface\nand always returns an empty list. Use the leg's `fareProducts` instead.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"fare","ofType":null}},"isDeprecated":true,"deprecationReason":"Use the leg's `fareProducts`."},{"name":"generalizedCost","description":"Generalized cost of the itinerary. Used for debugging search results.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"legs","description":"A list of Legs. Each Leg is either a walking (cycling, car) portion of the\nitinerary, or a transit leg on a particular vehicle. So a itinerary where the\nuser walks to the Q train, transfers to the 6, then walks to their\ndestination, has four legs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Leg","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"numberOfTransfers","description":"How many transfers are part of this itinerary.\n  \nNotes:\n - Interlined/stay-seated transfers do not increase this count.\n - Transferring from a flex to a fixed schedule trip and vice versa increases this count.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"start","description":"Time when the user leaves from the origin.","args":[],"type":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startTime","description":"Time when the user leaves from the origin. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":true,"deprecationReason":"Use `start` instead which includes timezone information."},{"name":"systemNotices","description":"A list of system notices. Contains debug information for itineraries.\nOne use-case is to run a routing search with 'debugItineraryFilter: true'.\nThis will then tag itineraries instead of removing them from the result.\nThis make it possible to inspect the itinerary-filter-chain.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SystemNotice","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"waitingTime","description":"How much time is spent waiting for transit to arrive, in seconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"walkDistance","description":"How far the user has to walk, in meters.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"walkTime","description":"How much time is spent walking, in seconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ItineraryFilterDebugProfile","description":"Enable this to attach a system notice to itineraries instead of removing them. This is very\nconvenient when tuning the itinerary-filter-chain.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LIMIT_TO_NUMBER_OF_ITINERARIES","description":"Only return the requested number of itineraries, counting both actual and deleted ones.\nThe top `numItineraries` using the request sort order is returned. This does not work\nwith paging, itineraries after the limit, but inside the search-window are skipped when\nmoving to the next page.","isDeprecated":false,"deprecationReason":null},{"name":"LIMIT_TO_SEARCH_WINDOW","description":"Return all itineraries, including deleted ones, inside the actual search-window used\n(the requested search-window may differ).","isDeprecated":false,"deprecationReason":null},{"name":"LIST_ALL","description":"List all itineraries, including all deleted itineraries.","isDeprecated":false,"deprecationReason":null},{"name":"OFF","description":"By default, the debug itinerary filters is turned off.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Leg","description":null,"fields":[{"name":"accessibilityScore","description":"Computes a numeric accessibility score between 0 and 1.\n  \nThe closer the value is to 1 the better the wheelchair-accessibility of this leg is.\nA value of `null` means that no score has been computed, not that the itinerary is inaccessible.\n  \nMore information is available in the [feature documentation](https://docs.opentripplanner.org/en/dev-2.x/sandbox/IBIAccessibilityScore/).","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"agency","description":"For transit legs, the transit agency that operates the service used for this leg. For non-transit legs, `null`.","args":[],"type":{"kind":"OBJECT","name":"Agency","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alerts","description":"Applicable alerts for this leg.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"arrivalDelay","description":"For transit leg, the offset from the scheduled arrival time of the alighting\nstop in this leg, i.e. scheduled time of arrival at alighting stop = `endTime\n- arrivalDelay`","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":true,"deprecationReason":"Use `start.estimated.delay` instead."},{"name":"departureDelay","description":"For transit leg, the offset from the scheduled departure time of the boarding\nstop in this leg, i.e. scheduled time of departure at boarding stop =\n`startTime - departureDelay`","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":true,"deprecationReason":"Use `end.estimated.delay` instead."},{"name":"distance","description":"The distance traveled while traversing the leg in meters.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dropOffBookingInfo","description":"Special booking information for the drop off stop of this leg if, for example, it needs\nto be booked in advance. This could be due to a flexible or on-demand service.","args":[],"type":{"kind":"OBJECT","name":"BookingInfo","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dropoffType","description":"This is used to indicate if alighting from this leg is possible only with special arrangements.","args":[],"type":{"kind":"ENUM","name":"PickupDropoffType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"duration","description":"The leg's duration in seconds","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"end","description":"The time when the leg ends including real-time information, if available.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"LegTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"endTime","description":"The date and time when this leg ends. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":true,"deprecationReason":"Use `end.estimated.time` instead which contains timezone information."},{"name":"fareProducts","description":"Fare products are purchasable tickets which may have an optional fare container or rider\ncategory that limits who can buy them or how.\n  \nPlease read the documentation of `id` very carefully to learn how a single fare product\nthat applies to multiple legs can appear several times.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"FareProductUse","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"from","description":"The Place where the leg originates.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Place","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"generalizedCost","description":"Generalized cost of the leg. Used for debugging search results.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"headsign","description":"For transit legs, the headsign that the vehicle shows at the stop where the passenger boards.\nFor non-transit legs, null.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"An identifier for the leg, which can be used to re-fetch transit leg information.\nRe-fetching fails when the underlying transit data no longer exists.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"interlineWithPreviousLeg","description":"Interlines with previous leg.\nThis is true when the same vehicle is used for the previous leg as for this leg\nand passenger can stay inside the vehicle.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"intermediatePlace","description":"Whether the destination of this leg (field `to`) is one of the intermediate places specified in the query.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"intermediatePlaces","description":"For transit legs, intermediate stops between the Place where the leg\noriginates and the Place where the leg ends. For non-transit legs, null.\nReturns Place type, which has fields for e.g. departure and arrival times","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Place","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"intermediateStops","description":"For transit legs, intermediate stops between the Place where the leg\noriginates and the Place where the leg ends. For non-transit legs, null.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"legGeometry","description":"The leg's geometry.","args":[],"type":{"kind":"OBJECT","name":"Geometry","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mode","description":"The mode (e.g. `WALK`) used when traversing this leg.","args":[],"type":{"kind":"ENUM","name":"Mode","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"nextLegs","description":"Future legs with same origin and destination stops or stations","args":[{"name":"destinationModesWithParentStation","description":"Transportation modes for which all stops in the parent station are used as possible destination stops\nfor the next legs. For modes not listed, only the exact destination stop of the leg is considered.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TransitMode","ofType":null}}},"defaultValue":null},{"name":"numberOfLegs","description":"The number of alternative legs searched. If fewer than the requested number are found,\nthen only the found legs are returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"originModesWithParentStation","description":"Transportation modes for which all stops in the parent station are used as possible origin stops\nfor the next legs. For modes not listed, only the exact origin stop of the leg is considered.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TransitMode","ofType":null}}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Leg","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"pickupBookingInfo","description":"Special booking information for the pick up stop of this leg if, for example, it needs\nto be booked in advance. This could be due to a flexible or on-demand service.","args":[],"type":{"kind":"OBJECT","name":"BookingInfo","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pickupType","description":"This is used to indicate if boarding this leg is possible only with special arrangements.","args":[],"type":{"kind":"ENUM","name":"PickupDropoffType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realTime","description":"Whether there is real-time data about this Leg","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtimeState","description":"State of real-time data","args":[],"type":{"kind":"ENUM","name":"RealtimeState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rentedBike","description":"Whether this leg is traversed with a rented bike.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rideHailingEstimate","description":"Estimate of a hailed ride like Uber.","args":[],"type":{"kind":"OBJECT","name":"RideHailingEstimate","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"route","description":"For transit legs, the route that is used for traversing the leg. For non-transit legs, `null`.","args":[],"type":{"kind":"OBJECT","name":"Route","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"serviceDate","description":"For transit legs, the service date of the trip. Format: YYYYMMDD. For non-transit legs, null.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"start","description":"The time when the leg starts including real-time information, if available.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"LegTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startTime","description":"The date and time when this leg begins. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":true,"deprecationReason":"Use `start.estimated.time` instead which contains timezone information."},{"name":"steps","description":"The turn-by-turn navigation instructions.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"step","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"to","description":"The Place where the leg ends.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Place","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"transitLeg","description":"Whether this leg is a transit leg or not.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"trip","description":"For transit legs, the trip that is used for traversing the leg. For non-transit legs, `null`.","args":[],"type":{"kind":"OBJECT","name":"Trip","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"walkingBike","description":"Whether this leg is walking with a bike.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LegTime","description":"Time information about a passenger at a certain place. May contain real-time information if\navailable.","fields":[{"name":"estimated","description":"The estimated time of the event. If no real-time information is available, this is null.","args":[],"type":{"kind":"OBJECT","name":"RealTimeEstimate","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"scheduledTime","description":"The scheduled time of the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"LocalDate","description":"An ISO-8601-formatted local date, i.e. `2024-05-24` for the 24th of May, 2024.\n\nISO-8601 allows many different date formats, however only the most common one - `yyyy-MM-dd` - is accepted.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LocalDateRangeInput","description":"Filters an entity by a date range.","fields":null,"inputFields":[{"name":"end","description":"**Exclusive** end date of the filter. This means that if you want a time window from Sunday to\nSunday, `end` must be on Monday.\n  \nIf `null` this means that no end filter is applied and all entities that are after or on `start`\nare selected.","type":{"kind":"SCALAR","name":"LocalDate","ofType":null},"defaultValue":null},{"name":"start","description":"**Inclusive** start date of the filter. If `null` this means that no `start` filter is applied and all\ndates that are before `end` are selected.","type":{"kind":"SCALAR","name":"LocalDate","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LocalTimeSpan","description":"A span of time.","fields":[{"name":"from","description":"The start of the time timespan as seconds from midnight.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"to","description":"The end of the timespan as seconds from midnight.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LocalTimeSpanDate","description":"A date using the local timezone of the object that can contain timespans.","fields":[{"name":"date","description":"The date of this time span. Format: YYYYMMDD.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"timeSpans","description":"The time spans for this date.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LocalTimeSpan","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Locale","description":"A IETF BCP 47 language tag","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"LocationType","description":"Identifies whether this stop represents a stop or station.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENTRANCE","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"STATION","description":"A physical structure or area that contains one or more stop.","isDeprecated":false,"deprecationReason":null},{"name":"STOP","description":"A location where passengers board or disembark from a transit vehicle.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"Long","description":"A 64-bit signed integer","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"Mode","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AIRPLANE","description":"AIRPLANE","isDeprecated":false,"deprecationReason":null},{"name":"BICYCLE","description":"BICYCLE","isDeprecated":false,"deprecationReason":null},{"name":"BUS","description":"BUS","isDeprecated":false,"deprecationReason":null},{"name":"CABLE_CAR","description":"CABLE_CAR","isDeprecated":false,"deprecationReason":null},{"name":"CAR","description":"CAR","isDeprecated":false,"deprecationReason":null},{"name":"CARPOOL","description":"Private car trips shared with others.","isDeprecated":false,"deprecationReason":null},{"name":"COACH","description":"COACH","isDeprecated":false,"deprecationReason":null},{"name":"FERRY","description":"FERRY","isDeprecated":false,"deprecationReason":null},{"name":"FLEX","description":"Enables flexible transit for access and egress legs","isDeprecated":false,"deprecationReason":null},{"name":"FLEXIBLE","description":"Enables flexible transit for access and egress legs","isDeprecated":true,"deprecationReason":"Use FLEX instead"},{"name":"FUNICULAR","description":"FUNICULAR","isDeprecated":false,"deprecationReason":null},{"name":"GONDOLA","description":"GONDOLA","isDeprecated":false,"deprecationReason":null},{"name":"LEG_SWITCH","description":"Only used internally. No use for API users.","isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"MONORAIL","description":"Railway in which the track consists of a single rail or a beam.","isDeprecated":false,"deprecationReason":null},{"name":"RAIL","description":"RAIL","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER","description":"SCOOTER","isDeprecated":false,"deprecationReason":null},{"name":"SUBWAY","description":"SUBWAY","isDeprecated":false,"deprecationReason":null},{"name":"TAXI","description":"A taxi, possibly operated by a public transport agency.","isDeprecated":false,"deprecationReason":null},{"name":"TRAM","description":"TRAM","isDeprecated":false,"deprecationReason":null},{"name":"TRANSIT","description":"A special transport mode, which includes all public transport.","isDeprecated":false,"deprecationReason":null},{"name":"TROLLEYBUS","description":"Electric buses that draw power from overhead wires using poles.","isDeprecated":false,"deprecationReason":null},{"name":"WALK","description":"WALK","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Money","description":"An amount of money.","fields":[{"name":"amount","description":"Money in the major currency unit, so 3.10 USD is represented as `3.1`.\n  \nIf you want to get the minor currency unit (310 cents), multiply with\n(10 to the power of `currency.digits`).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"currency","description":"The currency of this money amount.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Currency","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Node","description":"An object with an ID","fields":[{"name":"id","description":"The ID of an object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Agency","ofType":null},{"kind":"OBJECT","name":"Alert","ofType":null},{"kind":"OBJECT","name":"BikePark","ofType":null},{"kind":"OBJECT","name":"BikeRentalStation","ofType":null},{"kind":"OBJECT","name":"CarPark","ofType":null},{"kind":"OBJECT","name":"Cluster","ofType":null},{"kind":"OBJECT","name":"DepartureRow","ofType":null},{"kind":"OBJECT","name":"Pattern","ofType":null},{"kind":"OBJECT","name":"RentalVehicle","ofType":null},{"kind":"OBJECT","name":"Route","ofType":null},{"kind":"OBJECT","name":"Stop","ofType":null},{"kind":"OBJECT","name":"TicketType","ofType":null},{"kind":"OBJECT","name":"Trip","ofType":null},{"kind":"OBJECT","name":"VehicleParking","ofType":null},{"kind":"OBJECT","name":"VehicleRentalStation","ofType":null},{"kind":"OBJECT","name":"placeAtDistance","ofType":null},{"kind":"OBJECT","name":"stopAtDistance","ofType":null}]},{"kind":"ENUM","name":"OccupancyStatus","description":"Occupancy status of a vehicle.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CRUSHED_STANDING_ROOM_ONLY","description":"The vehicle or carriage can currently accommodate only standing passengers and has limited\nspace for them. There isn't a big difference between this and FULL so it's possible to handle\nthem as the same value, if one wants to limit the number of different values.\nSIRI nordic profile: merge into `STANDING_ROOM_ONLY`.","isDeprecated":false,"deprecationReason":null},{"name":"EMPTY","description":"The vehicle is considered empty by most measures, and has few or no passengers onboard, but is\nstill accepting passengers. There isn't a big difference between this and MANY_SEATS_AVAILABLE\nso it's possible to handle them as the same value, if one wants to limit the number of different\nvalues.\nSIRI nordic profile: merge these into `MANY_SEATS_AVAILABLE`.","isDeprecated":false,"deprecationReason":null},{"name":"FEW_SEATS_AVAILABLE","description":"The vehicle or carriage has a small number of seats available. The amount of free seats out of\nthe total seats available to be considered small enough to fall into this category is\ndetermined at the discretion of the producer.\nSIRI nordic profile: less than ~50% of seats available.","isDeprecated":false,"deprecationReason":null},{"name":"FULL","description":"The vehicle is considered full by most measures, but may still be allowing passengers to\nboard.","isDeprecated":false,"deprecationReason":null},{"name":"MANY_SEATS_AVAILABLE","description":"The vehicle or carriage has a large number of seats available. The amount of free seats out of\nthe total seats available to be considered large enough to fall into this category is\ndetermined at the discretion of the producer. There isn't a big difference between this and\nEMPTY so it's possible to handle them as the same value, if one wants to limit the number of\ndifferent values.\nSIRI nordic profile: more than ~50% of seats available.","isDeprecated":false,"deprecationReason":null},{"name":"NOT_ACCEPTING_PASSENGERS","description":"The vehicle or carriage is not accepting passengers.\nSIRI nordic profile: if vehicle/carriage is not in use / unavailable, or passengers are only allowed\nto alight due to e.g. crowding.","isDeprecated":false,"deprecationReason":null},{"name":"NO_DATA_AVAILABLE","description":"Default. There is no occupancy-data on this departure.","isDeprecated":false,"deprecationReason":null},{"name":"STANDING_ROOM_ONLY","description":"The vehicle or carriage can currently accommodate only standing passengers.\nSIRI nordic profile: less than ~10% of seats available.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"OffsetDateTime","description":"An ISO-8601-formatted datetime with offset, i.e. `2023-06-13T14:30+03:00` for 2:30pm on June 13th 2023 at Helsinki's offset from UTC at that time.\n\nISO-8601 allows many different formats but OTP will only return the profile specified in RFC3339.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OpeningHours","description":null,"fields":[{"name":"dates","description":"Opening hours for the selected dates using the local time of the parking lot.\nEach date can have multiple time spans.\n  \nNote: This is not implemented yet and always returns null.","args":[{"name":"dates","description":"Opening hours will be returned for these dates. Dates should use YYYYMMDD format.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LocalTimeSpanDate","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"osm","description":"OSM-formatted string of the opening hours.\n  \nThe spec is available at: https://wiki.openstreetmap.org/wiki/Key:opening_hours","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OptimizeType","description":"Optimization type for bicycling legs","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"FLAT","description":"Prefer flat terrain","isDeprecated":false,"deprecationReason":null},{"name":"GREENWAYS","description":"GREENWAYS","isDeprecated":false,"deprecationReason":null},{"name":"QUICK","description":"Prefer faster routes","isDeprecated":false,"deprecationReason":null},{"name":"SAFE","description":"Prefer safer routes, i.e. avoid crossing streets and use bike paths when possible","isDeprecated":false,"deprecationReason":null},{"name":"TRIANGLE","description":"**TRIANGLE** optimization type can be used to set relative preferences of optimization factors. See argument `triangle`.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PageInfo","description":"Information about pagination in a connection.","fields":[{"name":"endCursor","description":"When paginating forwards, the cursor to continue.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"hasNextPage","description":"When paginating forwards, are there more items?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasPreviousPage","description":"When paginating backwards, are there more items?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startCursor","description":"When paginating backwards, the cursor to continue.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ParkingFilter","description":"The filter definition to include or exclude parking facilities used during routing.\n\nLogically, the filter algorithm work as follows:\n\n- The starting point is the set of all facilities, lets call it `A`.\n- Then all `select` filters are applied to `A`, potentially reducing the number of facilities used.\n  Let's call the result of this `B`.\n  An empty `select` will lead to `A` being equal to `B`.\n- Lastly, the `not` filters are applied to `B`, reducing the set further.\n  Lets call this final set `C`.\n  An empty `not` will lead to `B` being equal to `C`.\n- The remaining parking facilities in `C` are used for routing.","fields":null,"inputFields":[{"name":"not","description":"Exclude parking facilities based on their properties.\n  \nIf empty nothing is excluded from the initial set of facilities but may be filtered down\nfurther by the `select` filter.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilterOperation","ofType":null}}},"defaultValue":null},{"name":"select","description":"Include parking facilities based on their properties.\n  \nIf empty everything is included from the initial set of facilities but may be filtered down\nfurther by the `not` filter.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilterOperation","ofType":null}}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ParkingFilterOperation","description":null,"fields":null,"inputFields":[{"name":"tags","description":"Filter parking facilities based on their tag","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Pattern","description":"Pattern is sequence of stops used by trips on a specific direction and variant\nof a route. Most routes have only two patterns: one for outbound trips and one\nfor inbound trips","fields":[{"name":"alerts","description":"By default, list of alerts which have directly an effect on just the pattern.\nIt's also possible to return other relevant alerts through defining types.","args":[{"name":"types","description":"Returns alerts for these types that are relevant for the pattern.\nBy default, list of alerts which have directly an effect on just the pattern.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"PatternAlertType","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"code","description":"ID of the pattern","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"directionId","description":"Direction of the pattern. Possible values: 0, 1 or -1.\n-1 indicates that the direction is irrelevant, i.e. the route has patterns only in one direction.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"geometry","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Coordinates","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"headsign","description":"Vehicle headsign used by trips of this pattern","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the pattern. Pattern name can be just the name of the route or it can\ninclude details of destination and origin stops.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"originalTripPattern","description":"Original Trip pattern for changed patterns","args":[],"type":{"kind":"OBJECT","name":"Pattern","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"patternGeometry","description":"Coordinates of the route of this pattern in Google polyline encoded format","args":[],"type":{"kind":"OBJECT","name":"Geometry","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"route","description":"The route this pattern runs on","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"semanticHash","description":"Hash code of the pattern. This value is stable and not dependent on the\npattern id, i.e. this value can be used to check whether two patterns are the\nsame, even if their ids have changed.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stops","description":"List of stops served by this pattern","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"trips","description":"Trips which run on this pattern","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Trip","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"tripsForDate","description":"Trips which run on this pattern on the specified date","args":[{"name":"serviceDate","description":"Return trips of the pattern active on this date. Format: YYYYMMDD","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Trip","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"vehiclePositions","description":"Real-time updated position of vehicles that are serving this pattern.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"VehiclePosition","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PatternAlertType","description":"Entities, which are relevant for a pattern and can contain alerts","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AGENCY","description":"Alerts affecting the pattern's route's agency","isDeprecated":false,"deprecationReason":null},{"name":"PATTERN","description":"Alerts affecting the pattern","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE","description":"Alerts affecting the route that the pattern runs on","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE_TYPE","description":"Alerts affecting the route type of the route that the pattern runs on","isDeprecated":false,"deprecationReason":null},{"name":"STOPS_ON_PATTERN","description":"Alerts affecting the stops which are on this pattern","isDeprecated":false,"deprecationReason":null},{"name":"STOPS_ON_TRIPS","description":"Alerts affecting the stops of the trips which run on this pattern","isDeprecated":false,"deprecationReason":null},{"name":"TRIPS","description":"Alerts affecting the trips which run on this pattern","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"PickupDropoffType","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CALL_AGENCY","description":"Must phone agency to arrange pickup / drop off.","isDeprecated":false,"deprecationReason":null},{"name":"COORDINATE_WITH_DRIVER","description":"Must coordinate with driver to arrange pickup / drop off.","isDeprecated":false,"deprecationReason":null},{"name":"NONE","description":"No pickup / drop off available.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEDULED","description":"Regularly scheduled pickup / drop off.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Place","description":null,"fields":[{"name":"arrival","description":"The time the rider will arrive at the place. This also includes real-time information\nif available.","args":[],"type":{"kind":"OBJECT","name":"LegTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"arrivalTime","description":"The time the rider will arrive at the place. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Long","ofType":null}},"isDeprecated":true,"deprecationReason":"Use `arrival` which includes timezone information."},{"name":"bikePark","description":"The bike parking related to the place","args":[],"type":{"kind":"OBJECT","name":"BikePark","ofType":null},"isDeprecated":true,"deprecationReason":"bikePark is deprecated. Use vehicleParking instead."},{"name":"bikeRentalStation","description":"The bike rental station related to the place","args":[],"type":{"kind":"OBJECT","name":"BikeRentalStation","ofType":null},"isDeprecated":true,"deprecationReason":"Use vehicleRentalStation and rentalVehicle instead"},{"name":"carPark","description":"The car parking related to the place","args":[],"type":{"kind":"OBJECT","name":"CarPark","ofType":null},"isDeprecated":true,"deprecationReason":"carPark is deprecated. Use vehicleParking instead."},{"name":"departure","description":"The time the rider will depart the place. This also includes real-time information\nif available.","args":[],"type":{"kind":"OBJECT","name":"LegTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"departureTime","description":"The time the rider will depart the place. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Long","ofType":null}},"isDeprecated":true,"deprecationReason":"Use `departure` which includes timezone information."},{"name":"lat","description":"Latitude of the place (WGS 84)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the place (WGS 84)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"For transit stops, the name of the stop. For points of interest, the name of the POI.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rentalVehicle","description":"The rental vehicle related to the place","args":[],"type":{"kind":"OBJECT","name":"RentalVehicle","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":"The stop related to the place.","args":[],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stopPosition","description":"The position of the stop in the pattern. This is not required to start from 0 or be consecutive - any\nincreasing integer sequence along the stops is valid.\n  \nThe purpose of this field is to identify the stop within the pattern so it can be cross-referenced\nbetween it and the itinerary. It is safe to cross-reference when done quickly, i.e. within seconds.\nHowever, it should be noted that real-time updates can change the values, so don't store it for\nlonger amounts of time.\n  \nDepending on the source data, this might not be the GTFS `stop_sequence` but another value, perhaps\neven generated.\n  \nThe position can be either at a certain stop or in between two for trips where this is possible.","args":[],"type":{"kind":"UNION","name":"StopPosition","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleParking","description":"The vehicle parking related to the place","args":[],"type":{"kind":"OBJECT","name":"VehicleParking","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleRentalStation","description":"The vehicle rental station related to the place","args":[],"type":{"kind":"OBJECT","name":"VehicleRentalStation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vertexType","description":"Type of vertex. (Normal, Bike sharing station, Bike P+R, Transit stop) Mostly\nused for better localization of bike sharing and P+R station names","args":[],"type":{"kind":"ENUM","name":"VertexType","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"PlaceInterface","description":"Interface for places, e.g. stops, stations, parking areas..","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the place (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the place (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"BikePark","ofType":null},{"kind":"OBJECT","name":"BikeRentalStation","ofType":null},{"kind":"OBJECT","name":"CarPark","ofType":null},{"kind":"OBJECT","name":"DepartureRow","ofType":null},{"kind":"OBJECT","name":"RentalVehicle","ofType":null},{"kind":"OBJECT","name":"Stop","ofType":null},{"kind":"OBJECT","name":"VehicleParking","ofType":null},{"kind":"OBJECT","name":"VehicleRentalStation","ofType":null}]},{"kind":"OBJECT","name":"Plan","description":null,"fields":[{"name":"date","description":"The time and date of travel. Format: Unix timestamp in milliseconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"debugOutput","description":"Information about the timings for the plan generation","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"debugOutput","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"from","description":"The origin","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Place","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"itineraries","description":"A list of possible itineraries","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Itinerary","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"messageEnums","description":"A list of possible error messages as enum","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"messageStrings","description":"A list of possible error messages in cleartext","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"nextDateTime","description":"This is the suggested search time for the \"next page\" or time window. Insert it together\nwith the searchWindowUsed in the request to get a new set of trips following in the\nsearch-window AFTER the current search. No duplicate trips should be returned, unless a trip\nis delayed and new real-time data is available.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":true,"deprecationReason":"Use nextPageCursor instead"},{"name":"nextPageCursor","description":"Use the cursor to go to the next \"page\" of itineraries. Copy the cursor from the last response\nto the pageCursor query parameter and keep the original request as is. This will enable you to\nsearch for itineraries in the next search-window.\nThe cursor based paging only support stepping to the next page, as it does not support jumping.\nThis is only usable when public transportation mode(s) are included in the query.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"prevDateTime","description":"This is the suggested search time for the \"previous page\" or time window. Insert it together\nwith the searchWindowUsed in the request to get a new set of trips preceding in the\nsearch-window BEFORE the current search. No duplicate trips should be returned, unless a trip\nis delayed and new real-time data is available.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":true,"deprecationReason":"Use previousPageCursor instead"},{"name":"previousPageCursor","description":"Use the cursor to go to the previous \"page\" of itineraries. Copy the cursor from the last\nresponse to the pageCursor query parameter and keep the original request otherwise as is.\nThis will enable you to search for itineraries in the previous search-window.\nThe cursor based paging only support stepping to the previous page, as it does not support\njumping.\nThis is only usable when public transportation mode(s) are included in the query.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"routingErrors","description":"A list of routing errors, and fields which caused them","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RoutingError","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"searchWindowUsed","description":"This is the `searchWindow` used by the raptor search. It is provided here for debugging\npurpousess.\n  \nThe unit is seconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"to","description":"The destination","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Place","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PlanAccessMode","description":"Street modes that can be used for access to the transit network from origin.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BICYCLE","description":"Cycling to a stop and boarding a vehicle with the bicycle.\nNote, this can include walking when it's needed to walk the bicycle.\nAccess can use cycling only if the mode used for transfers\nand egress is also `BICYCLE`.","isDeprecated":false,"deprecationReason":null},{"name":"BICYCLE_PARKING","description":"Starting the itinerary with a bicycle and parking the bicycle to\na parking location. Note, this can include walking after parking\nthe bicycle or when it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"BICYCLE_RENTAL","description":"Bicycle rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, access will include only walking. Also, this\ncan include walking before picking up or after dropping off the\nbicycle or when it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_DROP_OFF","description":"Getting dropped off by a car to a location that is accessible with a car.\nNote, this can include walking after the drop-off.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_PARKING","description":"Starting the itinerary with a car and parking the car to a parking location.\nNote, this can include walking after parking the car.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_RENTAL","description":"Car rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, access will include only walking. Also, this\ncan include walking before picking up or after dropping off the\ncar.","isDeprecated":false,"deprecationReason":null},{"name":"FLEX","description":"Flexible transit. This can include different forms of flexible transit that\ncan be defined in GTFS-Flex or in Netex. Note, this can include walking before\nor after the flexible transit leg.","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER_RENTAL","description":"Scooter rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, access will include only walking. Also, this\ncan include walking before picking up or after dropping off the\nscooter.","isDeprecated":false,"deprecationReason":null},{"name":"WALK","description":"Walking to a stop.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PlanConnection","description":"Plan (result of an itinerary search) that follows\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","fields":[{"name":"edges","description":"Edges which contain the itineraries. Part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PlanEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Contains cursors to continue the search and the information if there are more itineraries available.\nPart of the [GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PlanPageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"routingErrors","description":"Errors faced during the routing search.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RoutingError","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"searchDateTime","description":"What was the starting point for the itinerary search.","args":[],"type":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanCoordinateInput","description":"A coordinate used for a location in a plan query.","fields":null,"inputFields":[{"name":"latitude","description":"Latitude as a WGS84 format number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"CoordinateValue","ofType":null}},"defaultValue":null},{"name":"longitude","description":"Longitude as a WGS84 format number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"CoordinateValue","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanDateTimeInput","description":"Plan date time options. Only one of the values should be defined.","fields":null,"inputFields":[{"name":"earliestDeparture","description":"Earliest departure date time. The returned itineraries should not\ndepart before this instant unless one is using paging to find earlier\nitineraries. Note, it is not currently possible to define both\n`earliestDeparture` and `latestArrival`.","type":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null},"defaultValue":null},{"name":"latestArrival","description":"Latest arrival time date time. The returned itineraries should not\narrive to the destination after this instant unless one is using\npaging to find later itineraries. Note, it is not currently possible\nto define both `earliestDeparture` and `latestArrival`.","type":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PlanDirectMode","description":"Street mode that is used when searching for itineraries that don't use any transit.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BICYCLE","description":"Cycling from the origin to the destination. Note, this can include walking\nwhen it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"BICYCLE_PARKING","description":"Starting the itinerary with a bicycle and parking the bicycle to\na parking location. Note, this can include walking after parking\nthe bicycle or when it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"BICYCLE_RENTAL","description":"Bicycle rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, itinerary will include only walking.\nAlso, it can include walking before picking up or after dropping off the\nbicycle or when it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"CAR","description":"Driving a car from the origin to the destination.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_PARKING","description":"Starting the itinerary with a car and parking the car to a parking location.\nNote, this can include walking after parking the car.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_RENTAL","description":"Car rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, itinerary will include only walking. Also, this\ncan include walking before picking up or after dropping off the\ncar.","isDeprecated":false,"deprecationReason":null},{"name":"FLEX","description":"Flexible transit. This can include different forms of flexible transit that\ncan be defined in GTFS-Flex or in Netex. Note, this can include walking before\nor after the flexible transit leg.","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER_RENTAL","description":"Scooter rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, itinerary will include only walking. Also, this\ncan include walking before picking up or after dropping off the\nscooter.","isDeprecated":false,"deprecationReason":null},{"name":"WALK","description":"Walking from the origin to the destination. Note, this can include walking\nwhen it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PlanEdge","description":"Edge outputted by a plan search. Part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","fields":[{"name":"cursor","description":"The cursor of the edge. Part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"An itinerary suggestion. Part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Itinerary","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PlanEgressMode","description":"Street modes that can be used for egress from the transit network to destination.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BICYCLE","description":"Cycling from a stop to the destination. Note, this can include walking when\nit's needed to walk the bicycle. Egress can use cycling only if the mode used\nfor access and transfers is also `BICYCLE`.","isDeprecated":false,"deprecationReason":null},{"name":"BICYCLE_RENTAL","description":"Bicycle rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, egress will include only walking. Also, this\ncan include walking before picking up or after dropping off the\nbicycle or when it's needed to walk the bicycle.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_PICKUP","description":"Getting picked up by a car from a location that is accessible with a car.\nNote, this can include walking before the pickup.","isDeprecated":false,"deprecationReason":null},{"name":"CAR_RENTAL","description":"Car rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, egress will include only walking. Also, this\ncan include walking before picking up or after dropping off the\ncar.","isDeprecated":false,"deprecationReason":null},{"name":"FLEX","description":"Flexible transit. This can include different forms of flexible transit that\ncan be defined in GTFS-Flex or in Netex. Note, this can include walking before\nor after the flexible transit leg.","isDeprecated":false,"deprecationReason":null},{"name":"SCOOTER_RENTAL","description":"Scooter rental can use either station based systems or \"floating\"\nvehicles which are not linked to a rental station. Note, if there are no\nrental options available, egress will include only walking. Also, this\ncan include walking before picking up or after dropping off the\nscooter.","isDeprecated":false,"deprecationReason":null},{"name":"WALK","description":"Walking from a stop to the destination.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanItineraryFilterInput","description":"Settings that control the behavior of itinerary filtering. **These are advanced settings and\nshould not be set by a user through user preferences.**","fields":null,"inputFields":[{"name":"groupSimilarityKeepOne","description":"Pick one itinerary from each group after putting itineraries that are `85%` similar together,\nif the given value is `0.85`, for example. Itineraries are grouped together based on relative\nthe distance of transit travel that is identical between the itineraries (access, egress and\ntransfers are ignored). The value must be at least `0.5`.","type":{"kind":"SCALAR","name":"Ratio","ofType":null},"defaultValue":"0.85"},{"name":"groupSimilarityKeepThree","description":"Pick three itineraries from each group after putting itineraries that are `68%` similar together,\nif the given value is `0.68`, for example. Itineraries are grouped together based on relative\nthe distance of transit travel that is identical between the itineraries (access, egress and\ntransfers are ignored). The value must be at least `0.5`.","type":{"kind":"SCALAR","name":"Ratio","ofType":null},"defaultValue":"0.68"},{"name":"groupedOtherThanSameLegsMaxCostMultiplier","description":"Of the itineraries grouped to maximum of three itineraries, how much worse can the non-grouped\nlegs be compared to the lowest cost. `2.0` means that they can be double the cost, and any\nitineraries having a higher cost will be filtered away. Use a value lower than `1.0` to turn the\ngrouping off.","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":"2.0"},{"name":"itineraryFilterDebugProfile","description":"Itinerary filter debug profile used to control the behaviour of itinerary filters.","type":{"kind":"ENUM","name":"ItineraryFilterDebugProfile","ofType":null},"defaultValue":"OFF"}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanLabeledLocationInput","description":"Plan location settings. Location must be set. Label is optional\nand used for naming the location.","fields":null,"inputFields":[{"name":"label","description":"A label that can be attached to the location. This label is then returned with the location\nin the itineraries.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"location","description":"A location that has to be used in an itinerary.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"PlanLocationInput","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanLocationInput","description":"Plan location. Either a coordinate or a stop location should be defined.","fields":null,"inputFields":[{"name":"coordinate","description":"Coordinate of the location. Note, either a coordinate or a stop location should be defined.","type":{"kind":"INPUT_OBJECT","name":"PlanCoordinateInput","ofType":null},"defaultValue":null},{"name":"stopLocation","description":"Stop, station, a group of stop places or multimodal stop place that should be used as\na location for the search. The trip doesn't have to use the given stop location for a\ntransit connection as it's possible to start walking to another stop from the given\nlocation. If a station or a group of stop places is provided, a stop that makes the most\nsense for the journey is picked as the location within the station or group of stop places.","type":{"kind":"INPUT_OBJECT","name":"PlanStopLocationInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanModesInput","description":"Mode selections for the plan search.","fields":null,"inputFields":[{"name":"direct","description":"Street mode that is used when searching for itineraries that don't use any transit.\nIf more than one mode is selected, at least one of them must be used but not necessarily all.\nThere are modes that automatically also use walking such as the rental modes. To force rental\nto be used, this should only include the rental mode and not `WALK` in addition.\nThe default access mode is `WALK`.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PlanDirectMode","ofType":null}}},"defaultValue":null},{"name":"directOnly","description":"Should only the direct search without any transit be done.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"transit","description":"Modes for different phases of an itinerary when transit is included. Also\nincludes street mode selections related to connecting to the transit network\nand transfers. By default, all transit modes are usable and `WALK` is used for\naccess, egress and transfers.","type":{"kind":"INPUT_OBJECT","name":"PlanTransitModesInput","ofType":null},"defaultValue":null},{"name":"transitOnly","description":"Should only the transit search be done and never suggest itineraries that don't\ncontain any transit legs.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PlanPageInfo","description":"Information about pagination in a connection. Part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","fields":[{"name":"endCursor","description":"When paginating forwards, the cursor to continue.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"hasNextPage","description":"When paginating forwards, are there more items?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasPreviousPage","description":"When paginating backwards, are there more items?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"searchWindowUsed","description":"The search window that was used for the search in the current page.","args":[],"type":{"kind":"SCALAR","name":"Duration","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startCursor","description":"When paginating backwards, the cursor to continue.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanPreferencesInput","description":"Wrapper type for different types of preferences related to plan query.","fields":null,"inputFields":[{"name":"accessibility","description":"Accessibility preferences that affect both the street and transit routing.","type":{"kind":"INPUT_OBJECT","name":"AccessibilityPreferencesInput","ofType":null},"defaultValue":null},{"name":"street","description":"Street routing preferences used for ingress, egress and transfers. These do not directly affect\nthe transit legs but can change how preferable walking or cycling, for example, is compared to\ntransit.","type":{"kind":"INPUT_OBJECT","name":"PlanStreetPreferencesInput","ofType":null},"defaultValue":null},{"name":"transit","description":"Transit routing preferences used for transit legs.","type":{"kind":"INPUT_OBJECT","name":"TransitPreferencesInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanStopLocationInput","description":"Stop, station, a group of stop places or multimodal stop place that should be used as\na location for the search. The trip doesn't have to use the given stop location for a\ntransit connection as it's possible to start walking to another stop from the given\nlocation. If a station or a group of stop places is provided, a stop that makes the most\nsense for the journey is picked as the location within the station or group of stop places.","fields":null,"inputFields":[{"name":"stopLocationId","description":"ID of the stop, station, a group of stop places or multimodal stop place. Format\nshould be `FeedId:StopLocationId`.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanStreetPreferencesInput","description":"Street routing preferences used for ingress, egress and transfers. These do not directly affect\nthe transit legs but can change how preferable walking or cycling, for example, is compared to\ntransit.","fields":null,"inputFields":[{"name":"bicycle","description":"Cycling related preferences.","type":{"kind":"INPUT_OBJECT","name":"BicyclePreferencesInput","ofType":null},"defaultValue":null},{"name":"car","description":"Car related preferences. These are not used for car travel as part of transit, such as\ntaxi travel.","type":{"kind":"INPUT_OBJECT","name":"CarPreferencesInput","ofType":null},"defaultValue":null},{"name":"scooter","description":"Scooter (kick or electrical) related preferences.","type":{"kind":"INPUT_OBJECT","name":"ScooterPreferencesInput","ofType":null},"defaultValue":null},{"name":"walk","description":"Walk related preferences. These are not used when walking a bicycle or a scooter as they\nhave their own preferences.","type":{"kind":"INPUT_OBJECT","name":"WalkPreferencesInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PlanTransferMode","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BICYCLE","description":"Cycling between transit vehicles (typically between stops). Note, this can\ninclude walking when it's needed to walk the bicycle. Transfers can only use\ncycling if the mode used for access and egress is also `BICYCLE`.","isDeprecated":false,"deprecationReason":null},{"name":"WALK","description":"Walking between transit vehicles (typically between stops).","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanTransitModePreferenceInput","description":"Transit mode and a reluctance associated with it.","fields":null,"inputFields":[{"name":"cost","description":"Costs related to using a transit mode.","type":{"kind":"INPUT_OBJECT","name":"TransitModePreferenceCostInput","ofType":null},"defaultValue":null},{"name":"mode","description":"Transit mode that could be (but doesn't have to be) used in an itinerary.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TransitMode","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PlanTransitModesInput","description":"Modes for different phases of an itinerary when transit is included. Also includes street\nmode selections related to connecting to the transit network and transfers.","fields":null,"inputFields":[{"name":"access","description":"Street mode that is used when searching for access to the transit network from origin.\nIf more than one mode is selected, at least one of them must be used but not necessarily all.\nThere are modes that automatically also use walking such as the rental modes. To force rental\nto be used, this should only include the rental mode and not `WALK` in addition.\nThe default access mode is `WALK`.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PlanAccessMode","ofType":null}}},"defaultValue":null},{"name":"egress","description":"Street mode that is used when searching for egress to destination from the transit network.\nIf more than one mode is selected, at least one of them must be used but not necessarily all.\nThere are modes that automatically also use walking such as the rental modes. To force rental\nto be used, this should only include the rental mode and not `WALK` in addition.\nThe default access mode is `WALK`.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PlanEgressMode","ofType":null}}},"defaultValue":null},{"name":"transfer","description":"Street mode that is used when searching for transfers. Selection of only one allowed for now.\nThe default transfer mode is `WALK`.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PlanTransferMode","ofType":null}}},"defaultValue":null},{"name":"transit","description":"Transit modes and reluctances associated with them. Each defined mode can be used in\nan itinerary but doesn't have to be. If direct search is not disabled, there can be an\nitinerary without any transit legs. By default, all transit modes are usable.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"PlanTransitModePreferenceInput","ofType":null}}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Polyline","description":"List of coordinates in an encoded polyline format (see https://developers.google.com/maps/documentation/utilities/polylinealgorithm). The value appears in JSON as a string.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PositionAtStop","description":"Stop position at a specific stop.","fields":[{"name":"position","description":"Position of the stop in the pattern. Positions are not required to start from 0 or be consecutive.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PositionBetweenStops","description":"The board/alight position in between two stops of the pattern of a trip with continuous pickup/drop off.","fields":[{"name":"nextPosition","description":"Position of the next stop in the pattern. Positions are not required to start from 0 or be consecutive.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"previousPosition","description":"Position of the previous stop in the pattern. Positions are not required to start from 0 or be consecutive.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PropulsionType","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"COMBUSTION","description":"Powered by gasoline combustion engine","isDeprecated":false,"deprecationReason":null},{"name":"COMBUSTION_DIESEL","description":"Powered by diesel combustion engine","isDeprecated":false,"deprecationReason":null},{"name":"ELECTRIC","description":"Powered by battery-powered electric motor with throttle mode","isDeprecated":false,"deprecationReason":null},{"name":"ELECTRIC_ASSIST","description":"Provides electric motor assist only in combination with human propulsion - no throttle mode","isDeprecated":false,"deprecationReason":null},{"name":"HUMAN","description":"Pedal or foot propulsion","isDeprecated":false,"deprecationReason":null},{"name":"HYBRID","description":"Powered by combined combustion engine and battery-powered motor","isDeprecated":false,"deprecationReason":null},{"name":"HYDROGEN_FUEL_CELL","description":"Powered by hydrogen fuel cell powered electric motor","isDeprecated":false,"deprecationReason":null},{"name":"PLUG_IN_HYBRID","description":"Powered by combined combustion engine and battery-powered motor with plug-in charging","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"Qualifier","description":"Additional qualifier for a transport mode.\nNote that qualifiers can only be used with certain transport modes.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACCESS","description":"The mode is used for the access part of the search.","isDeprecated":false,"deprecationReason":null},{"name":"DIRECT","description":"The mode is used for the direct street search.","isDeprecated":false,"deprecationReason":null},{"name":"DROPOFF","description":"The user can be dropped off by someone else riding a vehicle","isDeprecated":false,"deprecationReason":null},{"name":"EGRESS","description":"The mode is used for the egress part of the search.","isDeprecated":false,"deprecationReason":null},{"name":"HAIL","description":"Hailing a ride, for example via an app like Uber.","isDeprecated":false,"deprecationReason":null},{"name":"HAVE","description":"~~HAVE~~\n**Currently not used**","isDeprecated":true,"deprecationReason":"Currently not used"},{"name":"KEEP","description":"~~KEEP~~\n**Currently not used**","isDeprecated":true,"deprecationReason":"Currently not used"},{"name":"PARK","description":"The vehicle used must be left to a parking area before continuing the journey.\nThis qualifier is usable with transport modes `CAR` and `BICYCLE`.\nNote that the vehicle is only parked if the journey is continued with public\ntransportation (e.g. if only `CAR` and `WALK` transport modes are allowed to\nbe used, the car will not be parked as it is used for the whole journey).","isDeprecated":false,"deprecationReason":null},{"name":"PICKUP","description":"The user can be picked up by someone else riding a vehicle","isDeprecated":false,"deprecationReason":null},{"name":"RENT","description":"The vehicle used for transport can be rented","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"QueryType","description":null,"fields":[{"name":"agencies","description":"Get all agencies","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Agency","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"agency","description":"Get a single agency based on agency ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Agency","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alerts","description":"Get all active alerts","args":[{"name":"cause","description":"Only return alerts with these causes","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"AlertCauseType","ofType":null}}},"defaultValue":null},{"name":"effect","description":"Only return alerts with these effects","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"AlertEffectType","ofType":null}}},"defaultValue":null},{"name":"feeds","description":"Only return alerts in these feeds","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"route","description":"Only return alerts affecting these routes","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"severityLevel","description":"Only return alerts with these severity levels","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"AlertSeverityLevelType","ofType":null}}},"defaultValue":null},{"name":"stop","description":"Only return alerts affecting these stops","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bikePark","description":"Get a single bike park based on its ID, i.e. value of field `bikeParkId`","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"BikePark","ofType":null},"isDeprecated":true,"deprecationReason":"bikePark is deprecated. Use vehicleParking instead."},{"name":"bikeParks","description":"Get all bike parks","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BikePark","ofType":null}},"isDeprecated":true,"deprecationReason":"bikeParks is deprecated. Use vehicleParkings instead."},{"name":"bikeRentalStation","description":"Get a single bike rental station based on its ID, i.e. value of field `stationId`","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"BikeRentalStation","ofType":null},"isDeprecated":true,"deprecationReason":"Use rentalVehicle or vehicleRentalStation instead"},{"name":"bikeRentalStations","description":"Get all bike rental stations","args":[{"name":"ids","description":"Return bike rental stations with these ids.\n**Note:** if an id is invalid (or the bike rental station service is unavailable)\nthe returned list will contain `null` values.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BikeRentalStation","ofType":null}},"isDeprecated":true,"deprecationReason":"Use rentalVehicles or vehicleRentalStations instead"},{"name":"cancelledTripTimes","description":"Get cancelled TripTimes.","args":[{"name":"feeds","description":"Feed feedIds (e.g. [\"HSL\"]).","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"maxArrivalTime","description":"Only cancelled trip times that have last stop arrival time at maxArrivalTime\nor before are returned. Format: seconds since midnight of maxDate.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"maxDate","description":"Only cancelled trip times scheduled to run on maxDate or before are returned. Format: \"2019-12-23\" or \"20191223\".","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"maxDepartureTime","description":"Only cancelled trip times that have first stop departure time at\nmaxDepartureTime or before are returned. Format: seconds since midnight of maxDate.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"minArrivalTime","description":"Only cancelled trip times that have last stop arrival time at minArrivalTime\nor after are returned. Format: seconds since midnight of minDate.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"minDate","description":"Only cancelled trip times scheduled to run on minDate or after are returned. Format: \"2019-12-23\" or \"20191223\".","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"minDepartureTime","description":"Only cancelled trip times that have first stop departure time at\nminDepartureTime or after are returned. Format: seconds since midnight of minDate.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"patterns","description":"TripPattern codes (e.g. [\"HSL:1098:1:01\"]).","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"routes","description":"Route gtfsIds (e.g. [\"HSL:1098\"]).","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"trips","description":"Trip gtfsIds (e.g. [\"HSL:1098_20190405_Ma_2_1455\"]).","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"carPark","description":"Get a single car park based on its ID, i.e. value of field `carParkId`","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CarPark","ofType":null},"isDeprecated":true,"deprecationReason":"carPark is deprecated. Use vehicleParking instead."},{"name":"carParks","description":"Get all car parks","args":[{"name":"ids","description":"Return car parks with these ids.\n**Note:** if an id is invalid (or the car park service is unavailable) the returned list will contain `null` values.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CarPark","ofType":null}},"isDeprecated":true,"deprecationReason":"carParks is deprecated. Use vehicleParkings instead."},{"name":"cluster","description":"Get a single cluster based on its ID, i.e. value of field `gtfsId`","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Cluster","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clusters","description":"Get all clusters","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Cluster","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"departureRow","description":"Get a single departure row based on its ID (ID format is `FeedId:StopId:PatternId`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DepartureRow","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"feeds","description":"Get all available feeds","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Feed","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fuzzyTrip","description":"Finds a trip matching the given parameters. This query type is useful if the\nid of a trip is not known, but other details uniquely identifying the trip are\navailable from some source (e.g. MQTT vehicle positions).","args":[{"name":"date","description":"Departure date of the trip, format: YYYY-MM-DD","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"direction","description":"Direction of the trip, possible values: 0, 1 or -1.\n-1 indicates that the direction is irrelevant, i.e. in case the route has\ntrips only in one direction. See field `directionId` of Pattern.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"-1"},{"name":"route","description":"id of the route","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"time","description":"Departure time of the trip, format: seconds since midnight of the departure date","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Trip","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"leg","description":"Try refetching the current state of a transit leg using its id.\nThis fails when the underlying transit data (mostly IDs) has changed or are no longer available.","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Leg","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"nearest","description":"Get all places (stops, stations, etc. with coordinates) within the specified\nradius from a location. The returned type is a Relay connection (see\nhttps://facebook.github.io/relay/graphql/connections.htm). The placeAtDistance\ntype has two fields: place and distance. The search is done by walking so the\ndistance is according to the network of walkable streets and paths.","args":[{"name":"after","description":null,"type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":null,"type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"filterByModes","description":"Only return places that are related to one of these transport modes. This\nargument can be used to return e.g. only nearest railway stations or only\nnearest places related to bicycling.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"Mode","ofType":null}},"defaultValue":null},{"name":"filterByNetwork","description":"Only include vehicle rental networks that match one of the given network ids.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"filterByPlaceTypes","description":"Only return places that are one of these types, e.g. `STOP` or `VEHICLE_RENT`","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"FilterPlaceType","ofType":null}},"defaultValue":null},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"lat","description":"Latitude of the location (WGS 84)","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"lon","description":"Longitude of the location (WGS 84)","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"maxDistance","description":"Maximum distance (in meters) to search for from the specified location. Note\nthat this is walking distance along streets and paths rather than a\ngeographic distance. Default is 2000m","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"2000"},{"name":"maxResults","description":"Maximum number of results. Search is stopped when this limit is reached. Default is 20.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"20"}],"type":{"kind":"OBJECT","name":"placeAtDistanceConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"Fetches an object given its ID","args":[{"name":"id","description":"The ID of an object","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null}],"type":{"kind":"INTERFACE","name":"Node","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pattern","description":"Get a single pattern based on its ID, i.e. value of field `code` (format is\n`FeedId:RouteId:DirectionId:PatternVariantNumber`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Pattern","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"patterns","description":"Get all patterns","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Pattern","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"plan","description":"Plans an itinerary from point A to point B based on the given arguments","args":[{"name":"alightSlack","description":"Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"allowKeepingRentedBicycleAtDestination","description":"Whether arriving at the destination with a rented (station) bicycle is allowed without\ndropping it off. Default: false.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"allowedTicketTypes","description":"List of ticket types that are allowed to be used in itineraries.\nSee `ticketTypes` query for list of possible ticket types.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"allowedVehicleRentalNetworks","description":"Which vehicle rental networks can be used. By default, all networks are allowed.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"arriveBy","description":"Whether the itinerary should depart at the specified time (false), or arrive\nto the destination at the specified time (true). Default value: false.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"banned","description":"List of routes, trips, agencies and stops which are not used in the itinerary","type":{"kind":"INPUT_OBJECT","name":"InputBanned","ofType":null},"defaultValue":null},{"name":"bannedVehicleRentalNetworks","description":"Which vehicle rental networks cannot be used. By default, all networks are allowed.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"bikeBoardCost","description":"Separate cost for boarding a vehicle with a bicycle, which is more difficult\nthan on foot. Unit: seconds. Default value: 600","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"bikeReluctance","description":"A multiplier for how bad biking is, compared to being in transit for equal\nlengths of time. Default value: 2.0","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"bikeSpeed","description":"Max bike speed along streets, in meters per second. Default value: 5.0","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"bikeSwitchCost","description":"Cost of getting on and off your own bike. Unit: seconds. Default value: 0","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"bikeSwitchTime","description":"Time to get on and off your own bike, in seconds. Default value: 0","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"bikeWalkingReluctance","description":"A multiplier for how bad walking with a bike is, compared to being in transit for equal\nlengths of time. Default value: 5.0","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"boardSlack","description":"Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"carReluctance","description":"A multiplier for how bad driving is, compared to being in transit for equal\nlengths of time. Default value: 3.0","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"date","description":"Date of departure or arrival in format YYYY-MM-DD. Default value: current date","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"debugItineraryFilter","description":"Debug the itinerary-filter-chain. The filters will mark itineraries as deleted, but does NOT delete them when this is enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"from","description":"The geographical location where the itinerary begins.\nUse either this argument or `fromPlace`, but not both.","type":{"kind":"INPUT_OBJECT","name":"InputCoordinates","ofType":null},"defaultValue":null},{"name":"fromPlace","description":"The place where the itinerary begins in format `name::place`, where `place`\nis either a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id\n(e.g. `Pasila::HSL:1000202`).\nUse either this argument or `from`, but not both.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"ignoreRealtimeUpdates","description":"When true, real-time updates are ignored during this search. Default value: false","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"keepingRentedBicycleAtDestinationCost","description":"The cost of arriving at the destination with the rented vehicle, to discourage doing so.\nDefault value: 0.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"locale","description":"Two-letter language code (ISO 639-1) used for returned text.\n**Note:** only part of the data has translations available and names of\nstops and POIs are returned in their default language. Due to missing\ntranslations, it is sometimes possible that returned text uses a mixture of two languages.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"maxTransfers","description":"Maximum number of transfers. Default value: 2","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"minTransferTime","description":"A global minimum transfer time (in seconds) that specifies the minimum\namount of time that must pass between exiting one transit vehicle and\nboarding another. This time is in addition to time it might take to walk\nbetween transit stops. Default value: 120","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"modeWeight","description":"The weight multipliers for transit modes. WALK, BICYCLE, CAR, TRANSIT and LEG_SWITCH are not included.","type":{"kind":"INPUT_OBJECT","name":"InputModeWeight","ofType":null},"defaultValue":null},{"name":"nonpreferredTransferPenalty","description":"Penalty (in seconds) for using a non-preferred transfer. Default value: 180","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"numItineraries","description":"The maximum number of itineraries to return. Default value: 3.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"3"},{"name":"omitCanceled","description":"When false, return itineraries using canceled trips. Default value: true.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"optimize","description":"Optimization type for bicycling legs, e.g. prefer flat terrain. Default value: `QUICK`","type":{"kind":"ENUM","name":"OptimizeType","ofType":null},"defaultValue":null},{"name":"pageCursor","description":"Use the cursor to get the next or previous page of results.\nThe next page is a set of itineraries departing after the last itinerary in this result and\nthe previous page is a set of itineraries departing before the first itinerary.\nThis is only usable when public transportation mode(s) are included in the query.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"parking","description":"Preferences for vehicle parking","type":{"kind":"INPUT_OBJECT","name":"VehicleParkingInput","ofType":null},"defaultValue":null},{"name":"preferred","description":"List of routes and agencies which are given higher preference when planning the itinerary","type":{"kind":"INPUT_OBJECT","name":"InputPreferred","ofType":null},"defaultValue":null},{"name":"searchWindow","description":"The length of the search-window in seconds. This parameter is optional.\n    \nThe search-window is defined as the duration between the earliest-departure-time(EDT) and\nthe latest-departure-time(LDT). OTP will search for all itineraries in this departure\nwindow. If `arriveBy=true` the `dateTime` parameter is the latest-arrival-time, so OTP\nwill dynamically calculate the EDT. Using a short search-window is faster than using a\nlonger one, but the search duration is not linear. Using a \\\"too\\\" short search-window will\nwaste resources server side, while using a search-window that is too long will be slow.\n    \nOTP will dynamically calculate a reasonable value for the search-window, if not provided.\nThe calculation comes with a significant overhead (10-20% extra). Whether you should use the\ndynamic calculated value or pass in a value depends on your use-case. For a travel planner\nin a small geographical area, with a dense network of public transportation, a fixed value\nbetween 40 minutes and 2 hours makes sense. To find the appropriate search-window, adjust\nit so that the number of itineraries on average is around the wanted `numItineraries`. Make\nsure you set the `numItineraries` to a high number while testing. For a country wide area\nlike Norway, using the dynamic search-window is the best.\n    \nWhen paginating, the search-window is calculated using the `numItineraries` in the original\nsearch together with statistics from the search for the last page. This behaviour is\nconfigured server side, and can not be overridden from the client.\n    \nThe search-window used is returned to the response metadata as `searchWindowUsed` for\ndebugging purposes.","type":{"kind":"SCALAR","name":"Long","ofType":null},"defaultValue":null},{"name":"startTransitStopId","description":"This argument has currently no effect on which itineraries are returned. Use\nargument `fromPlace` to start the itinerary from a specific stop.\n~~A transit stop that this trip must start from~~","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"time","description":"Time of departure or arrival in format hh:mm:ss. Default value: current time","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"to","description":"The geographical location where the itinerary ends.\nUse either this argument or `toPlace`, but not both.","type":{"kind":"INPUT_OBJECT","name":"InputCoordinates","ofType":null},"defaultValue":null},{"name":"toPlace","description":"The place where the itinerary ends in format `name::place`, where `place` is\neither a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id\n(e.g. `Pasila::HSL:1000202`).\nUse either this argument or `to`, but not both.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"transferPenalty","description":"An extra penalty added on transfers (i.e. all boardings except the first\none). Not to be confused with bikeBoardCost and walkBoardCost, which are the\ncost of boarding a vehicle with and without a bicycle. The boardCosts are\nused to model the 'usual' perceived cost of using a transit vehicle, and the\ntransferPenalty is used when a user requests even less transfers. In the\nlatter case, we don't actually optimize for fewest transfers, as this can\nlead to absurd results. Consider a trip in New York from Grand Army Plaza\n(the one in Brooklyn) to Kalustyan's at noon. The true lowest transfers\nroute is to wait until midnight, when the 4 train runs local the whole way.\nThe actual fastest route is the 2/3 to the 4/5 at Nevins to the 6 at Union\nSquare, which takes half an hour. Even someone optimizing for fewest\ntransfers doesn't want to wait until midnight. Maybe they would be willing\nto walk to 7th Ave and take the Q to Union Square, then transfer to the 6.\nIf this takes less than optimize_transfer_penalty seconds, then that's what\nwe'll return. Default value: 0.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"transportModes","description":"List of transportation modes that the user is willing to use. Default: `[\"WALK\",\"TRANSIT\"]`","type":{"kind":"LIST","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"TransportMode","ofType":null}},"defaultValue":null},{"name":"triangle","description":"Triangle optimization parameters for bicycling legs. Only effective when `optimize` is set to **TRIANGLE**.","type":{"kind":"INPUT_OBJECT","name":"InputTriangle","ofType":null},"defaultValue":null},{"name":"unpreferred","description":"List of routes and agencies which are given lower preference when planning the itinerary","type":{"kind":"INPUT_OBJECT","name":"InputUnpreferred","ofType":null},"defaultValue":null},{"name":"waitReluctance","description":"How much worse is waiting for a transit vehicle than being on a transit\nvehicle, as a multiplier. The default value treats wait and on-vehicle time\nas the same. It may be tempting to set this higher than walkReluctance (as\nstudies often find this kind of preferences among riders) but the planner\nwill take this literally and walk down a transit line to avoid waiting at a\nstop. This used to be set less than 1 (0.95) which would make waiting\noffboard preferable to waiting onboard in an interlined trip. That is also\nundesirable. If we only tried the shortest possible transfer at each stop to\nneighboring stop patterns, this problem could disappear. Default value: 1.0.","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"walkBoardCost","description":"This prevents unnecessary transfers by adding a cost for boarding a vehicle. Unit: seconds. Default value: 600","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"walkReluctance","description":"A multiplier for how bad walking is, compared to being in transit for equal\nlengths of time. Empirically, values between 2 and 4 seem to correspond\nwell to the concept of not wanting to walk too much without asking for\ntotally ridiculous itineraries, but this observation should in no way be\ntaken as scientific or definitive. Your mileage may vary. See\nhttps://github.com/opentripplanner/OpenTripPlanner/issues/4090 for impact on\nperformance with high values. Default value: 2.0","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"walkSafetyFactor","description":"Factor for how much the walk safety is considered in routing. Value should be between 0 and 1.\nIf the value is set to be 0, safety is ignored. Default is 1.0.","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"walkSpeed","description":"Max walk speed along streets, in meters per second. Default value: 1.33","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"wheelchair","description":"Whether the itinerary must be wheelchair accessible. Default value: false","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Plan","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"planConnection","description":"Plan (itinerary) search that follows\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm).","args":[{"name":"after","description":"Takes in cursor from a previous search. Used for forward pagination. If earliest departure time\nis used in the original query, the new search then returns itineraries that depart after\nthe start time of the last itinerary that was returned, or at the same time if there are multiple\nitinerary options that can depart at that moment in time.\nIf latest arrival time is defined, the new search returns itineraries that arrive before the end\ntime of the last itinerary that was returned in the previous search, or at the same time if there\nare multiple itinerary options that can arrive at that moment in time. This parameter is part of\nthe [GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm) and\nshould be used together with the `first` parameter.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Takes in cursor from a previous search. Used for backwards pagination. If earliest departure time\nis used in the original query, the new search then returns itineraries that depart before that time.\nIf latest arrival time is defined, the new search returns itineraries that arrive after that time.\nThis parameter is part of the [GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm)\nand should be used together with the `last` parameter.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"dateTime","description":"Datetime of the search. It's possible to either define the earliest departure time\nor the latest arrival time. By default, earliest departure time is set as now.","type":{"kind":"INPUT_OBJECT","name":"PlanDateTimeInput","ofType":null},"defaultValue":null},{"name":"destination","description":"The destination where the search ends. Usually coordinates but can also be a stop location.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"PlanLabeledLocationInput","ofType":null}},"defaultValue":null},{"name":"first","description":"How many new itineraries should at maximum be returned in either the first search or with\nforward pagination. This parameter is part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm)\nand should be used together with the `after` parameter (although `after` shouldn't be defined\nin the first search).","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"itineraryFilter","description":"Settings that control the behavior of itinerary filtering. These are advanced settings and\nshould not be set by a user through user preferences.","type":{"kind":"INPUT_OBJECT","name":"PlanItineraryFilterInput","ofType":null},"defaultValue":null},{"name":"last","description":"How many new itineraries should at maximum be returned in backwards pagination. It's recommended to\nuse the same value as was used for the `first` parameter in the original search for optimal\nperformance. This parameter is part of the\n[GraphQL Cursor Connections Specification](https://relay.dev/graphql/connections.htm)\nand should be used together with the `before` parameter.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"locale","description":"Locale used for translations. Note, there might not necessarily be translations available.\nIt's possible and recommended to use the ´accept-language´ header instead of this parameter.","type":{"kind":"SCALAR","name":"Locale","ofType":null},"defaultValue":null},{"name":"modes","description":"Street and transit modes used during the search. This also includes options to only return\nan itinerary that contains no transit legs or force transit to be used in all itineraries.\nBy default, all transit modes are usable and `WALK` is used for direct street suggestions,\naccess, egress and transfers.","type":{"kind":"INPUT_OBJECT","name":"PlanModesInput","ofType":null},"defaultValue":null},{"name":"origin","description":"The origin where the search starts. Usually coordinates but can also be a stop location.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"PlanLabeledLocationInput","ofType":null}},"defaultValue":null},{"name":"preferences","description":"Preferences that affect what itineraries are returned. Preferences are split into categories.","type":{"kind":"INPUT_OBJECT","name":"PlanPreferencesInput","ofType":null},"defaultValue":null},{"name":"searchWindow","description":"Duration of the search window. This either starts at the defined earliest departure\ntime or ends at the latest arrival time. If this is not provided, a reasonable\nsearch window is automatically generated. When searching for earlier or later itineraries\nwith paging, this search window is no longer used and the new window will be based\non how many suggestions were returned in the previous search. The new search window can be\nshorter or longer than the original search window. Note, itineraries are returned faster\nwith a smaller search window and search window limitation is done mainly for performance reasons.\n    \nSetting this parameter makes especially sense if the transportation network is as sparse or dense\nin the whole itinerary search area. Otherwise, letting the system decide what is the search window\nis in combination of using paging can lead to better performance and to getting a more consistent\nnumber of itineraries in each search.","type":{"kind":"SCALAR","name":"Duration","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PlanConnection","ofType":null},"isDeprecated":true,"deprecationReason":"Experimental and can include breaking changes, use plan instead"},{"name":"rentalVehicle","description":"Get a single rental vehicle based on its ID, i.e. value of field `vehicleId`","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RentalVehicle","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rentalVehicles","description":"Get all rental vehicles","args":[{"name":"formFactors","description":"Return only rental vehicles that have this form factor.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"FormFactor","ofType":null}},"defaultValue":null},{"name":"ids","description":"Return rental vehicles with these ids, i.e. value of field `vehicleId`.\n**Note:** if an id is invalid (or the rental service is unavailable)\nthe returned list will contain `null` values.\n    \nIf this is provided all other filters are ignored.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RentalVehicle","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"route","description":"Get a single route based on its ID, i.e. value of field `gtfsId` (format is `FeedId:RouteId`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Route","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"routes","description":"Get all routes","args":[{"name":"feeds","description":"Only return routes with these feedIds","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"name","description":"Query routes by this name","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"serviceDates","description":"Only include routes whose pattern operates on at least one service date specified by this filter.\n    \n**Note**: A service date is a technical term useful for transit planning purposes and might not\ncorrespond to a how a passenger thinks of a calendar date. For example, a night bus running\non Sunday morning at 1am to 3am, might have the previous Saturday's service date.","type":{"kind":"INPUT_OBJECT","name":"LocalDateRangeInput","ofType":null},"defaultValue":null},{"name":"transportModes","description":"Only include routes, which use one of these modes","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"Mode","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"serviceTimeRange","description":"Get the time range for which the API has data available","args":[],"type":{"kind":"OBJECT","name":"serviceTimeRange","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"station","description":"Get a single station based on its ID, i.e. value of field `gtfsId` (format is `FeedId:StopId`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stations","description":"Get all stations","args":[{"name":"ids","description":"Only return stations that match one of the ids in this list","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"name","description":"Query stations by name","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":"Get a single stop based on its ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stops","description":"Get all stops","args":[{"name":"ids","description":"Return stops with these ids","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"name","description":"Query stops by this name","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stopsByBbox","description":"Get all stops within the specified bounding box","args":[{"name":"feeds","description":"List of feed ids from which stops are returned","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"maxLat","description":"Northern bound of the bounding box","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"maxLon","description":"Eastern bound of the bounding box","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"minLat","description":"Southern bound of the bounding box","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"minLon","description":"Western bound of the bounding box","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stopsByRadius","description":"Get all stops within the specified radius from a location. The returned type\nis a Relay connection (see\nhttps://facebook.github.io/relay/graphql/connections.htm). The stopAtDistance\ntype has two values: stop and distance.","args":[{"name":"after","description":null,"type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":null,"type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"feeds","description":"List of feed ids from which stops are returned","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"lat","description":"Latitude of the location (WGS 84)","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"lon","description":"Longitude of the location (WGS 84)","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"defaultValue":null},{"name":"radius","description":"Radius (in meters) to search for from the specified location. Note that this\nis walking distance along streets and paths rather than a geographic distance.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"stopAtDistanceConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ticketTypes","description":"Return list of available ticket types","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TicketType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"trip","description":"Get a single trip based on its ID, i.e. value of field `gtfsId` (format is `FeedId:TripId`)","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Trip","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"trips","description":"Get all trips","args":[{"name":"feeds","description":"Only return trips with these feedIds","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Trip","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleParking","description":"Get a single vehicle parking based on its ID","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"VehicleParking","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleParkings","description":"Get all vehicle parkings","args":[{"name":"ids","description":"Return vehicle parkings with these ids.\n**Note:** if an id is invalid (or the vehicle parking service is unavailable)\nthe returned list will contain `null` values.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"VehicleParking","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleRentalStation","description":"Get a single vehicle rental station based on its ID, i.e. value of field `stationId`","args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"VehicleRentalStation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleRentalStations","description":"Get all vehicle rental stations","args":[{"name":"ids","description":"Return vehicle rental stations with these ids, i.e. value of field `stationId`.\n**Note:** if an id is invalid (or the rental service is unavailable)\nthe returned list will contain `null` values.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"VehicleRentalStation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewer","description":"Needed until https://github.com/facebook/relay/issues/112 is resolved","args":[],"type":{"kind":"OBJECT","name":"QueryType","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Ratio","description":"A fractional multiplier between 0 and 1, for example 0.25. 0 means 0% and 1 means 100%.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RealTimeEstimate","description":"Real-time estimates for a vehicle at a certain place.","fields":[{"name":"delay","description":"The delay or \"earliness\" of the vehicle at a certain place.\n  \nIf the vehicle is early then this is a negative duration.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Duration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"time","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"OffsetDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RealtimeState","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ADDED","description":"The trip has been added using a real-time update, i.e. the trip was not present in the GTFS feed.","isDeprecated":false,"deprecationReason":null},{"name":"CANCELED","description":"The trip has been canceled by a real-time update.","isDeprecated":false,"deprecationReason":null},{"name":"MODIFIED","description":"The trip information has been updated and resulted in a different trip pattern\ncompared to the trip pattern of the scheduled trip.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEDULED","description":"The trip information comes from the GTFS feed, i.e. no real-time update has been applied.","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED","description":"The trip information has been updated, but the trip pattern stayed the same as the trip pattern of the scheduled trip.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"RelativeDirection","description":"Actions to take relative to the current position when engaging a walking/driving step.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CIRCLE_CLOCKWISE","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"CIRCLE_COUNTERCLOCKWISE","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"CONTINUE","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"DEPART","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"ELEVATOR","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"ENTER_STATION","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"EXIT_STATION","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"FOLLOW_SIGNS","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"HARD_LEFT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"HARD_RIGHT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"LEFT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"RIGHT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"SLIGHTLY_LEFT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"SLIGHTLY_RIGHT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"UTURN_LEFT","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"UTURN_RIGHT","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"Reluctance","description":"A cost multiplier for how bad something is compared to being in transit for equal lengths of time.\nThe value should be greater than 0. 1 means neutral and values below 1 mean that something is\npreferred over transit.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RentalVehicle","description":"Rental vehicle represents a vehicle that belongs to a rental network.","fields":[{"name":"allowPickupNow","description":"If true, vehicle is currently available for renting.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the vehicle (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the vehicle (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the vehicle","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"network","description":"ID of the rental network.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"Use `networkId` from `rentalNetwork` instead."},{"name":"operative","description":"If true, vehicle is not disabled.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rentalNetwork","description":"The vehicle rental network information. This is referred as system in the GBFS terminology.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"VehicleRentalNetwork","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"rentalUris","description":"Platform-specific URLs to begin the vehicle.","args":[],"type":{"kind":"OBJECT","name":"VehicleRentalUris","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleId","description":"ID of the vehicle in the format of network:id","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleType","description":"The type of the rental vehicle (scooter, bicycle, car...)","args":[],"type":{"kind":"OBJECT","name":"RentalVehicleType","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RentalVehicleEntityCounts","description":null,"fields":[{"name":"byType","description":"The number of entities by type","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RentalVehicleTypeCount","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"total","description":"The total number of entities (e.g. vehicles, spaces).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RentalVehicleType","description":null,"fields":[{"name":"formFactor","description":"The vehicle's general form factor","args":[],"type":{"kind":"ENUM","name":"FormFactor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"propulsionType","description":"The primary propulsion type of the vehicle","args":[],"type":{"kind":"ENUM","name":"PropulsionType","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RentalVehicleTypeCount","description":null,"fields":[{"name":"count","description":"The number of vehicles of this type","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleType","description":"The type of the rental vehicle (scooter, bicycle, car...)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RentalVehicleType","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RideHailingEstimate","description":"An estimate for a ride on a hailed vehicle, like an Uber car.","fields":[{"name":"arrival","description":"The estimated time it takes for the vehicle to arrive.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Duration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"maxPrice","description":"The upper bound of the price estimate of this ride.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Money","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"minPrice","description":"The lower bound of the price estimate of this ride.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Money","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"productName","description":"The name of the ride, ie. UberX","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"provider","description":"The provider of the ride hailing service.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RideHailingProvider","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RideHailingProvider","description":null,"fields":[{"name":"id","description":"The ID of the ride hailing provider.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RiderCategory","description":"Category of riders a fare product applies to, for example students or pensioners.","fields":[{"name":"id","description":"ID of the category","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Human readable name of the category.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Route","description":"Route represents a public transportation service, usually from point A to point\nB and *back*, shown to customers under a single name, e.g. bus 550. Routes\ncontain patterns (see field `patterns`), which describe different variants of\nthe route, e.g. outbound pattern from point A to point B and inbound pattern\nfrom point B to point A.","fields":[{"name":"agency","description":"Agency operating the route","args":[],"type":{"kind":"OBJECT","name":"Agency","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alerts","description":"List of alerts which have an effect on the route directly or indirectly.\nBy default only alerts directly affecting this route are returned. It's also possible\nto return other relevant alerts through defining types.","args":[{"name":"types","description":"Returns alerts for these types that are relevant for the route.\nBy default only returns alerts that directly affect this route.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RouteAlertType","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bikesAllowed","description":null,"args":[],"type":{"kind":"ENUM","name":"BikesAllowed","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"color","description":"The color (in hexadecimal format) the agency operating this route would prefer\nto use on UI elements (e.g. polylines on a map) related to this route. This\nvalue is not available for most routes.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"desc","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"gtfsId","description":"ID of the route in format `FeedId:RouteId`","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"longName","description":"Long name of the route, e.g. Helsinki-Leppävaara","args":[{"name":"language","description":"If translated longName is found from gtfs translation.txt and wanted language is not same as\nfeed's language then returns wanted translation. Otherwise uses name from routes.txt.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mode","description":"Transport mode of this route, e.g. `BUS`","args":[],"type":{"kind":"ENUM","name":"TransitMode","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"patterns","description":"List of patterns which operate on this route","args":[{"name":"serviceDates","description":"Filter patterns by the service dates they operate on.\n    \n**Note**: A service date is a technical term useful for transit planning purposes and might not\ncorrespond to a how a passenger thinks of a calendar date. For example, a night bus running\non Sunday morning at 1am to 3am, might have the previous Saturday's service date.","type":{"kind":"INPUT_OBJECT","name":"LocalDateRangeInput","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Pattern","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"shortName","description":"Short name of the route, usually a line number, e.g. 550","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sortOrder","description":"Orders the routes in a way which is useful for presentation to passengers.\nRoutes with smaller values should be displayed first.\n  \nThe value can be any non-negative integer. A null value means that no information was supplied.\n  \nThis value is passed through from the source data without modification. If multiple feeds\ndefine sort orders for their routes, they may not be comparable to each other as no agreed scale\nexists.\n  \nTwo routes may also have the same sort order and clients must decide based on other criteria\nwhat the actual order is.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stops","description":"List of stops on this route","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"textColor","description":"The color (in hexadecimal format) the agency operating this route would prefer\nto use when displaying text related to this route. This value is not available\nfor most routes.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"trips","description":"List of trips which operate on this route","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Trip","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":"The raw GTFS route type as a integer. For the list of possible values, see:\nhttps://developers.google.com/transit/gtfs/reference/#routestxt and\nhttps://developers.google.com/transit/gtfs/reference/extended-route-types","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RouteAlertType","description":"Entities that are relevant for routes that can contain alerts","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AGENCY","description":"Alerts affecting the route's agency.","isDeprecated":false,"deprecationReason":null},{"name":"PATTERNS","description":"Alerts affecting route's patterns.","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE","description":"Alerts directly affecting the route.","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE_TYPE","description":"Alerts affecting the route type of the route.","isDeprecated":false,"deprecationReason":null},{"name":"STOPS_ON_ROUTE","description":"Alerts affecting the stops that are on the route.","isDeprecated":false,"deprecationReason":null},{"name":"STOPS_ON_TRIPS","description":"Alerts affecting the stops on some trips of the route.","isDeprecated":false,"deprecationReason":null},{"name":"TRIPS","description":"Alerts affecting the route's trips.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RouteType","description":"Route type entity which covers all agencies if agency is null,\notherwise only relevant for one agency.","fields":[{"name":"agency","description":"A public transport agency","args":[],"type":{"kind":"OBJECT","name":"Agency","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"routeType","description":"GTFS Route type.\nFor the list of possible values, see:\n    https://developers.google.com/transit/gtfs/reference/#routestxt and\n    https://developers.google.com/transit/gtfs/reference/extended-route-types","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"routes","description":"The routes which have the defined routeType and belong to the agency, if defined.\nOtherwise all routes of the feed that have the defined routeType.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RoutingError","description":"Description of the reason, why the planner did not return any results","fields":[{"name":"code","description":"An enum describing the reason","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RoutingErrorCode","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"A textual description of why the search failed. The clients are expected to have their own translations based on the code, for user visible error messages.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"inputField","description":"An enum describing the field which should be changed, in order for the search to succeed","args":[],"type":{"kind":"ENUM","name":"InputField","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RoutingErrorCode","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOCATION_NOT_FOUND","description":"The specified location is not close to any streets or transit stops currently loaded into the\nsystem, even though it is generally within its bounds.\n  \nThis can happen when there is only transit but no street data coverage at the location in\nquestion.","isDeprecated":false,"deprecationReason":null},{"name":"NO_STOPS_IN_RANGE","description":"No stops are reachable from the start or end locations specified.\n  \nYou can try searching using a different access or egress mode, for example cycling instead of walking,\nincrease the walking/cycling/driving speed or have an administrator change the system's configuration\nso that stops further away are considered.","isDeprecated":false,"deprecationReason":null},{"name":"NO_TRANSIT_CONNECTION","description":"No transit connection was found between the origin and destination within the operating day or\nthe next day, not even sub-optimal ones.","isDeprecated":false,"deprecationReason":null},{"name":"NO_TRANSIT_CONNECTION_IN_SEARCH_WINDOW","description":"A transit connection was found, but it was outside the search window. See the metadata for a token\nfor retrieving the result outside the search window.","isDeprecated":false,"deprecationReason":null},{"name":"OUTSIDE_BOUNDS","description":"The coordinates are outside the geographic bounds of the transit and street data currently loaded\ninto the system and therefore cannot return any results.","isDeprecated":false,"deprecationReason":null},{"name":"OUTSIDE_SERVICE_PERIOD","description":"The date specified is outside the range of data currently loaded into the system as it is too\nfar into the future or the past.\n  \nThe specific date range of the system is configurable by an administrator and also depends on\nthe input data provided.","isDeprecated":false,"deprecationReason":null},{"name":"WALKING_BETTER_THAN_TRANSIT","description":"Transit connections were requested and found but because it is easier to just walk all the way\nto the destination they were removed.\n  \nIf you want to still show the transit results, you need to make walking less desirable by\nincreasing the walk reluctance.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ScooterOptimizationInput","description":"What criteria should be used when optimizing a scooter route.","fields":null,"inputFields":[{"name":"triangle","description":"Define optimization by weighing three criteria.","type":{"kind":"INPUT_OBJECT","name":"TriangleScooterFactorsInput","ofType":null},"defaultValue":null},{"name":"type","description":"Use one of the predefined optimization types.","type":{"kind":"ENUM","name":"ScooterOptimizationType","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ScooterOptimizationType","description":"Predefined optimization alternatives for scooter routing. For more customization,\none can use the triangle factors.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"FLAT_STREETS","description":"Emphasize flatness over safety or duration of the route. This option was previously called `FLAT`.","isDeprecated":false,"deprecationReason":null},{"name":"SAFEST_STREETS","description":"Completely ignore the elevation differences and prefer the streets, that are evaluated\nto be safest for scooters, even more than with the `SAFE_STREETS` option.\nSafety can also include other concerns such as convenience and general preferences by taking\ninto account road surface etc.  Note, currently the same criteria is used both for cycling and\nscooter travel to determine how safe streets are for cycling or scooter.\nThis option was previously called `GREENWAYS`.","isDeprecated":false,"deprecationReason":null},{"name":"SAFE_STREETS","description":"Emphasize scooter safety over flatness or duration of the route. Safety can also include other\nconcerns such as convenience and general preferences by taking into account road surface etc.\nNote, currently the same criteria is used both for cycling and scooter travel to determine how\nsafe streets are for cycling or scooter. This option was previously called `SAFE`.","isDeprecated":false,"deprecationReason":null},{"name":"SHORTEST_DURATION","description":"Search for routes with the shortest duration while ignoring the scooter safety\nof the streets. The routes should still follow local regulations, but currently scooters\nare only allowed on the same streets as bicycles which might not be accurate for each country\nor with different types of scooters. Routes can include steep streets, if they are\nthe fastest alternatives. This option was previously called `QUICK`.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ScooterPreferencesInput","description":"Preferences related to travel with a scooter (kick or e-scooter).","fields":null,"inputFields":[{"name":"optimization","description":"What criteria should be used when optimizing a scooter route.","type":{"kind":"INPUT_OBJECT","name":"ScooterOptimizationInput","ofType":null},"defaultValue":null},{"name":"reluctance","description":"A multiplier for how bad riding a scooter is compared to being in transit\nfor equal lengths of time.","type":{"kind":"SCALAR","name":"Reluctance","ofType":null},"defaultValue":null},{"name":"rental","description":"Scooter rental related preferences.","type":{"kind":"INPUT_OBJECT","name":"ScooterRentalPreferencesInput","ofType":null},"defaultValue":null},{"name":"speed","description":"Maximum speed on flat ground while riding a scooter. Note, this speed is higher than\nthe average speed will be in itineraries as this is the maximum speed but there are\nfactors that slow down the travel such as crossings, intersections and elevation changes.","type":{"kind":"SCALAR","name":"Speed","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ScooterRentalPreferencesInput","description":"Preferences related to scooter rental (station based or floating scooter rental).","fields":null,"inputFields":[{"name":"allowedNetworks","description":"Rental networks which can be potentially used as part of an itinerary.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"bannedNetworks","description":"Rental networks which cannot be used as part of an itinerary.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"destinationScooterPolicy","description":"Is it possible to arrive to the destination with a rented scooter and does it\ncome with an extra cost.","type":{"kind":"INPUT_OBJECT","name":"DestinationScooterPolicyInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Speed","description":"Speed in meters per seconds. Values are positive floating point numbers (for example, 2.34).","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Stop","description":"Stop can represent either a single public transport stop, where passengers can\nboard and/or disembark vehicles, or a station, which contains multiple stops.\nSee field `locationType`.","fields":[{"name":"alerts","description":"By default, list of alerts which have directly an effect on just the stop.\nIt's also possible to return other relevant alerts through defining types.","args":[{"name":"types","description":"Returns alerts for these types that are relevant for the stop.\nBy default, list of alerts which have directly an effect on just the stop.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"StopAlertType","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"cluster","description":"The cluster which this stop is part of","args":[],"type":{"kind":"OBJECT","name":"Cluster","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"code","description":"Stop code which is visible at the stop","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"desc","description":"Description of the stop, usually a street name","args":[{"name":"language","description":"If translated description is found from gtfs translation.txt and wanted language is not same as\nfeed's language then returns wanted translation. Otherwise uses descriptions from stops.txt.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"direction","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"geometries","description":"Representations of this stop's geometry. This is mainly interesting for flex stops which can be\na polygon or a group of stops either consisting of either points or polygons.\n  \nRegular fixed-schedule stops return a single point.\n  \nStations (parent stations with child stops) contain a geometry collection with a point for the\ncentral coordinate plus a convex hull polygon (https://en.wikipedia.org/wiki/Convex_hull) of all\ncoordinates of the child stops.\n  \nIf there are only two child stops then the convex hull is a straight line between the them. If\nthere is a single child stop then it's a single point.","args":[],"type":{"kind":"OBJECT","name":"StopGeometries","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"gtfsId","description":"ÌD of the stop in format `FeedId:StopId`","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the stop (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"locationType","description":"Identifies whether this stop represents a stop or station.","args":[],"type":{"kind":"ENUM","name":"LocationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the stop (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the stop, e.g. Pasilan asema","args":[{"name":"language","description":"If translated name is found from gtfs translation.txt and wanted language is not same as\nfeed's language then returns wanted translation. Otherwise uses name from stops.txt.\nE.g. Swedish name for Pasilan asema is Böle station.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"parentStation","description":"The station which this stop is part of (or null if this stop is not part of a station)","args":[],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"patterns","description":"Patterns which pass through this stop","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Pattern","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"platformCode","description":"Identifier of the platform, usually a number. This value is only present for stops that are part of a station","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"routes","description":"Routes which pass through this stop","args":[{"name":"serviceDates","description":"Only include routes which are operational on at least one service date specified by this filter.\n    \n**Note**: A service date is a technical term useful for transit planning purposes and might not\ncorrespond to a how a passenger thinks of a calendar date. For example, a night bus running\non Sunday morning at 1am to 3am, might have the previous Saturday's service date.","type":{"kind":"INPUT_OBJECT","name":"LocalDateRangeInput","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"stopTimesForPattern","description":"Returns timetable of the specified pattern at this stop","args":[{"name":"id","description":"Id of the pattern","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"numberOfDepartures","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"2"},{"name":"omitCanceled","description":"If false, returns also canceled trips","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"omitNonPickups","description":"If true, only those departures which allow boarding are returned","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"startTime","description":"Return  departures after this time. Format: Unix timestamp in seconds. Default value: current time","type":{"kind":"SCALAR","name":"Long","ofType":null},"defaultValue":"0"},{"name":"timeRange","description":"Return stoptimes within this time range, starting from `startTime`. Unit: Seconds","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"86400"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stops","description":"Returns all stops that are children of this station (Only applicable for stations)","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimesForPatterns","description":"Returns list of stoptimes (arrivals and departures) at this stop, grouped by patterns","args":[{"name":"numberOfDepartures","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"5"},{"name":"omitCanceled","description":"If false, returns also canceled trips","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"omitNonPickups","description":"If true, only those departures which allow boarding are returned","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"startTime","description":"Return departures after this time. Format: Unix timestamp in seconds. Default value: current time","type":{"kind":"SCALAR","name":"Long","ofType":null},"defaultValue":"0"},{"name":"timeRange","description":"Return stoptimes within this time range, starting from `startTime`. Unit: Seconds","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"86400"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"StoptimesInPattern","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimesForServiceDate","description":"Returns list of stoptimes for the specified date","args":[{"name":"date","description":"Date in format YYYYMMDD","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"omitCanceled","description":"If false, returns also canceled trips","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"omitNonPickups","description":"If true, only those departures which allow boarding are returned","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"StoptimesInPattern","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimesWithoutPatterns","description":"Returns list of stoptimes (arrivals and departures) at this stop","args":[{"name":"numberOfDepartures","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"5"},{"name":"omitCanceled","description":"If false, returns also canceled trips","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"omitNonPickups","description":"If true, only those departures which allow boarding are returned","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"startTime","description":"Return departures after this time. Format: Unix timestamp in seconds. Default value: current time","type":{"kind":"SCALAR","name":"Long","ofType":null},"defaultValue":"0"},{"name":"timeRange","description":"Return stoptimes within this time range, starting from `startTime`. Unit: Seconds","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"86400"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"timezone","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"transfers","description":"List of nearby stops which can be used for transfers","args":[{"name":"maxDistance","description":"Maximum distance to the transfer stop. Defaults to unlimited.\n**Note:** only stops that are linked as a transfer stops to this stop are\nreturned, i.e. this does not do a query to search for *all* stops within\nradius of `maxDistance`.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"stopAtDistance","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":null,"args":[{"name":"language","description":"If translated url is found from gtfs translation.txt and wanted language is not same as\nfeed's language then returns wanted translation. Otherwise uses url from stops.txt.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleMode","description":"Transport mode (e.g. `BUS`) used by routes which pass through this stop or\n`null` if mode cannot be determined, e.g. in case no routes pass through the stop.\nNote that also other types of vehicles may use the stop, e.g. tram replacement\nbuses might use stops which have `TRAM` as their mode.","args":[],"type":{"kind":"ENUM","name":"Mode","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleType","description":"The raw GTFS route type used by routes which pass through this stop. For the\nlist of possible values, see:\nhttps://developers.google.com/transit/gtfs/reference/#routestxt and\nhttps://developers.google.com/transit/gtfs/reference/extended-route-types","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"wheelchairBoarding","description":"Whether wheelchair boarding is possible for at least some of vehicles on this stop","args":[],"type":{"kind":"ENUM","name":"WheelchairBoarding","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"zoneId","description":"ID of the zone where this stop is located","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"StopAlertType","description":"Entities, which are relevant for a stop and can contain alerts","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AGENCIES_OF_ROUTES","description":"Alerts affecting the agencies of the routes going through the stop","isDeprecated":false,"deprecationReason":null},{"name":"PATTERNS","description":"Alerts affecting the stop's patterns","isDeprecated":false,"deprecationReason":null},{"name":"ROUTES","description":"Alerts affecting the routes that go through the stop","isDeprecated":false,"deprecationReason":null},{"name":"STOP","description":"Alerts affecting the stop","isDeprecated":false,"deprecationReason":null},{"name":"STOP_ON_ROUTES","description":"Alerts affecting the stop on specific routes","isDeprecated":false,"deprecationReason":null},{"name":"STOP_ON_TRIPS","description":"Alerts affecting the stop on specific trips","isDeprecated":false,"deprecationReason":null},{"name":"TRIPS","description":"Alerts affecting the trips that go through this stop","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"StopGeometries","description":null,"fields":[{"name":"geoJson","description":"Representation of the stop geometries as GeoJSON (https://geojson.org/)","args":[],"type":{"kind":"SCALAR","name":"GeoJson","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"googleEncoded","description":"Representation of a stop as a series of polylines.\n  \nPolygons of flex stops are represented as linear rings (lines where the first and last point are the same).\n  \nProper stops are represented as single point \"lines\".","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Geometry","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StopOnRoute","description":"Stop that should (but not guaranteed) to exist on a route.","fields":[{"name":"route","description":"Route which contains the stop.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":"Stop at the route. It's also possible that the stop is no longer on the route.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StopOnTrip","description":"Stop that should (but not guaranteed) to exist on a trip.","fields":[{"name":"stop","description":"Stop at the trip. It's also possible that the stop is no longer on the trip.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"trip","description":"Trip which contains the stop.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Trip","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"StopPosition","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"PositionAtStop","ofType":null},{"kind":"OBJECT","name":"PositionBetweenStops","ofType":null}]},{"kind":"OBJECT","name":"StopRelationship","description":"Upcoming or current stop and how close the vehicle is to it.","fields":[{"name":"status","description":"How close the vehicle is to `stop`","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"VehicleStopStatus","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Stoptime","description":"Stoptime represents the time when a specific trip arrives to or departs from a specific stop.","fields":[{"name":"arrivalDelay","description":"The offset from the scheduled arrival time in seconds. Negative values\nindicate that the trip is running ahead of schedule.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"departureDelay","description":"The offset from the scheduled departure time in seconds. Negative values\nindicate that the trip is running ahead of schedule","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dropoffType","description":"Whether the vehicle can be disembarked at this stop. This field can also be\nused to indicate if disembarkation is possible only with special arrangements.","args":[],"type":{"kind":"ENUM","name":"PickupDropoffType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"headsign","description":"Vehicle headsign of the trip on this stop. Trip headsigns can change during\nthe trip (e.g. on routes which run on loops), so this value should be used\ninstead of `tripHeadsign` to display the headsign relevant to the user.","args":[{"name":"language","description":"If translated headsign is found from gtfs translation.txt and wanted language is not same as\nfeed's language then returns wanted translation. Otherwise uses name from trip_headsign.txt.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pickupType","description":"Whether the vehicle can be boarded at this stop. This field can also be used\nto indicate if boarding is possible only with special arrangements.","args":[],"type":{"kind":"ENUM","name":"PickupDropoffType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtime","description":"true, if this stoptime has real-time data available","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtimeArrival","description":"Real-time prediction of arrival time. Format: seconds since midnight of the departure date","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtimeDeparture","description":"Real-time prediction of departure time. Format: seconds since midnight of the departure date","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtimeState","description":"State of real-time data","args":[],"type":{"kind":"ENUM","name":"RealtimeState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"scheduledArrival","description":"Scheduled arrival time. Format: seconds since midnight of the departure date","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"scheduledDeparture","description":"Scheduled departure time. Format: seconds since midnight of the departure date","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"serviceDay","description":"Departure date of the trip. Format: Unix timestamp (local time) in seconds.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":"The stop where this arrival/departure happens","args":[],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stopPosition","description":"The sequence of the stop in the pattern. This is not required to start from 0 or be consecutive - any\nincreasing integer sequence along the stops is valid.\n  \nThe purpose of this field is to identify the stop within the pattern so it can be cross-referenced\nbetween it and the itinerary. It is safe to cross-reference when done quickly, i.e. within seconds.\nHowever, it should be noted that real-time updates can change the values, so don't store it for\nlonger amounts of time.\n  \nDepending on the source data, this might not be the GTFS `stop_sequence` but another value, perhaps\neven generated.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"timepoint","description":"true, if this stop is used as a time equalization stop. false otherwise.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"trip","description":"Trip which this stoptime is for","args":[],"type":{"kind":"OBJECT","name":"Trip","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StoptimesInPattern","description":"Stoptimes grouped by pattern","fields":[{"name":"pattern","description":null,"args":[],"type":{"kind":"OBJECT","name":"Pattern","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"Built-in String","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SystemNotice","description":"A system notice is used to tag elements with system information for debugging\nor other system related purpose. One use-case is to run a routing search with\n'debugItineraryFilter: true'. This will then tag itineraries instead of removing\nthem from the result. This make it possible to inspect the itinerary-filter-chain.\nA SystemNotice only has english text,\nbecause the primary user are technical staff, like testers and developers.","fields":[{"name":"tag","description":"Notice's tag","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":"Notice's description","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TicketType","description":"Describes ticket type","fields":[{"name":"currency","description":"ISO 4217 currency code","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fareId","description":"Ticket type ID in format `FeedId:TicketTypeId`. Ticket type IDs are usually\ncombination of ticket zones where the ticket is valid.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"price","description":"Price of the ticket in currency that is specified in `currency` field","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"zones","description":"List of zones where this ticket is valid.\nCorresponds to field `zoneId` in **Stop** type.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TimetablePreferencesInput","description":null,"fields":null,"inputFields":[{"name":"excludeRealTimeUpdates","description":"When false, real-time updates are considered during the routing.\nIn practice, when this option is set as true, some of the suggestions might not be\nrealistic as the transfers could be invalid due to delays,\ntrips can be cancelled or stops can be skipped.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"includePlannedCancellations","description":"When true, departures that have been cancelled ahead of time will be\nincluded during the routing. This means that an itinerary can include\na cancelled departure while some other alternative that contains no cancellations\ncould be filtered out as the alternative containing a cancellation would normally\nbe better.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"includeRealTimeCancellations","description":"When true, departures that have been cancelled through a real-time feed will be\nincluded during the routing. This means that an itinerary can include\na cancelled departure while some other alternative that contains no cancellations\ncould be filtered out as the alternative containing a cancellation would normally\nbe better. This option can't be set to true while `includeRealTimeUpdates` is false.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TransferPreferencesInput","description":"Preferences related to transfers between transit vehicles (typically between stops).","fields":null,"inputFields":[{"name":"cost","description":"A static cost that is added for each transfer on top of other costs.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null},{"name":"maximumAdditionalTransfers","description":"How many additional transfers there can be at maximum compared to the itinerary with the\nleast number of transfers.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"maximumTransfers","description":"How many transfers there can be at maximum in an itinerary.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"slack","description":"A global minimum transfer time (in seconds) that specifies the minimum amount of time\nthat must pass between exiting one transit vehicle and boarding another. This time is\nin addition to time it might take to walk between transit stops. Setting this value\nas `PT0S`, for example, can lead to passenger missing a connection when the vehicle leaves\nahead of time or the passenger arrives to the stop later than expected.","type":{"kind":"SCALAR","name":"Duration","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TransitMode","description":"Transit modes include modes that are used within organized transportation networks\nrun by public transportation authorities, taxi companies etc.\nEquivalent to GTFS route_type or to NeTEx TransportMode.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AIRPLANE","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"BUS","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"CABLE_CAR","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"CARPOOL","description":"Private car trips shared with others.","isDeprecated":false,"deprecationReason":null},{"name":"COACH","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"FERRY","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"FUNICULAR","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"GONDOLA","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"MONORAIL","description":"Railway in which the track consists of a single rail or a beam.","isDeprecated":false,"deprecationReason":null},{"name":"RAIL","description":"This includes long or short distance trains.","isDeprecated":false,"deprecationReason":null},{"name":"SUBWAY","description":"Subway or metro, depending on the local terminology.","isDeprecated":false,"deprecationReason":null},{"name":"TAXI","description":"A taxi, possibly operated by a public transport agency.","isDeprecated":false,"deprecationReason":null},{"name":"TRAM","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"TROLLEYBUS","description":"Electric buses that draw power from overhead wires using poles.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TransitModePreferenceCostInput","description":"Costs related to using a transit mode.","fields":null,"inputFields":[{"name":"reluctance","description":"A cost multiplier of transit leg travel time.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Reluctance","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TransitPreferencesInput","description":"Transit routing preferences used for transit legs.","fields":null,"inputFields":[{"name":"alight","description":"Preferences related to alighting from a transit vehicle.","type":{"kind":"INPUT_OBJECT","name":"AlightPreferencesInput","ofType":null},"defaultValue":null},{"name":"board","description":"Preferences related to boarding a transit vehicle. Note, board costs for each street mode\ncan be found under the street mode preferences.","type":{"kind":"INPUT_OBJECT","name":"BoardPreferencesInput","ofType":null},"defaultValue":null},{"name":"timetable","description":"Preferences related to cancellations and real-time.","type":{"kind":"INPUT_OBJECT","name":"TimetablePreferencesInput","ofType":null},"defaultValue":null},{"name":"transfer","description":"Preferences related to transfers between transit vehicles (typically between stops).","type":{"kind":"INPUT_OBJECT","name":"TransferPreferencesInput","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TranslatedString","description":"Text with language","fields":[{"name":"language","description":"Two-letter language code (ISO 639-1)","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TransportMode","description":"Transportation mode which can be used in the itinerary","fields":null,"inputFields":[{"name":"mode","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"Mode","ofType":null}},"defaultValue":null},{"name":"qualifier","description":"Optional additional qualifier for transport mode, e.g. `RENT`","type":{"kind":"ENUM","name":"Qualifier","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TriangleCyclingFactorsInput","description":"Relative importance of optimization factors. Only effective for bicycling legs.\nInvariant: `safety + flatness + time == 1`","fields":null,"inputFields":[{"name":"flatness","description":"Relative importance of flat terrain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Ratio","ofType":null}},"defaultValue":null},{"name":"safety","description":"Relative importance of cycling safety, but this factor can also include other\nconcerns such as convenience and general cyclist preferences by taking into account\nroad surface etc.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Ratio","ofType":null}},"defaultValue":null},{"name":"time","description":"Relative importance of duration","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Ratio","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TriangleScooterFactorsInput","description":"Relative importance of optimization factors. Only effective for scooter legs.\nInvariant: `safety + flatness + time == 1`","fields":null,"inputFields":[{"name":"flatness","description":"Relative importance of flat terrain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Ratio","ofType":null}},"defaultValue":null},{"name":"safety","description":"Relative importance of scooter safety, but this factor can also include other\nconcerns such as convenience and general scooter preferences by taking into account\nroad surface etc.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Ratio","ofType":null}},"defaultValue":null},{"name":"time","description":"Relative importance of duration","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Ratio","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Trip","description":"Trip is a specific occurance of a pattern, usually identified by route, direction on the route and exact departure time.","fields":[{"name":"activeDates","description":"List of dates when this trip is in service. Format: YYYYMMDD","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"alerts","description":"By default, list of alerts which have directly an effect on just the trip.\nIt's also possible to return other relevant alerts through defining types.","args":[{"name":"types","description":"Returns alerts for these types that are relevant for the trip.\nBy default, list of alerts which have directly an effect on just the trip.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"TripAlertType","ofType":null}},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"arrivalStoptime","description":"Arrival time to the final stop","args":[{"name":"serviceDate","description":"Date for which the arrival time is returned. Format: YYYYMMDD. If this\nargument is not used, field `serviceDay` in the stoptime will have a value of 0.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Stoptime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bikesAllowed","description":"Whether bikes are allowed on board the vehicle running this trip","args":[],"type":{"kind":"ENUM","name":"BikesAllowed","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockId","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"departureStoptime","description":"Departure time from the first stop","args":[{"name":"serviceDate","description":"Date for which the departure time is returned. Format: YYYYMMDD. If this\nargument is not used, field `serviceDay` in the stoptime will have a value of 0.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Stoptime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directionId","description":"Direction code of the trip, i.e. is this the outbound or inbound trip of a\npattern. Possible values: 0, 1 or `null` if the direction is irrelevant, i.e.\nthe pattern has trips only in one direction.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"geometry","description":"List of coordinates of this trip's route","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"gtfsId","description":"ID of the trip in format `FeedId:TripId`","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occupancy","description":"The latest real-time occupancy information for the latest occurance of this\ntrip.","args":[],"type":{"kind":"OBJECT","name":"TripOccupancy","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pattern","description":"The pattern the trip is running on","args":[],"type":{"kind":"OBJECT","name":"Pattern","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"route","description":"The route the trip is running on","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"routeShortName","description":"Short name of the route this trip is running. See field `shortName` of Route.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"semanticHash","description":"Hash code of the trip. This value is stable and not dependent on the trip id.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"serviceId","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"shapeId","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stops","description":"List of stops this trip passes through","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Stop","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimes","description":"List of times when this trip arrives to or departs from a stop","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stoptimesForDate","description":null,"args":[{"name":"serviceDate","description":"Date for which stoptimes are returned. Format: YYYYMMDD","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Stoptime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tripGeometry","description":"Coordinates of the route of this trip in Google polyline encoded format","args":[],"type":{"kind":"OBJECT","name":"Geometry","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tripHeadsign","description":"Headsign of the vehicle when running on this trip","args":[{"name":"language","description":"If a translated headsign is found from GTFS translation.txt and wanted language is not same as\nfeed's language then returns wanted translation. Otherwise uses name from trip_headsign.txt.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tripShortName","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"wheelchairAccessible","description":"Whether the vehicle running this trip can be boarded by a wheelchair","args":[],"type":{"kind":"ENUM","name":"WheelchairBoarding","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TripAlertType","description":"Entities, which are relevant for a trip and can contain alerts","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AGENCY","description":"Alerts affecting the trip's agency","isDeprecated":false,"deprecationReason":null},{"name":"PATTERN","description":"Alerts affecting the trip's pattern","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE","description":"Alerts affecting the trip's route","isDeprecated":false,"deprecationReason":null},{"name":"ROUTE_TYPE","description":"Alerts affecting the route type of the trip's route","isDeprecated":false,"deprecationReason":null},{"name":"STOPS_ON_TRIP","description":"Alerts affecting the stops visited on the trip.\nSome of the alerts can only affect the trip or its route on the stop.","isDeprecated":false,"deprecationReason":null},{"name":"TRIP","description":"Alerts affecting the trip","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"TripOccupancy","description":"Occupancy of a vehicle on a trip. This should include the most recent occupancy information\navailable for a trip. Historic data might not be available.","fields":[{"name":"occupancyStatus","description":"Occupancy information mapped to a limited set of descriptive states.","args":[],"type":{"kind":"ENUM","name":"OccupancyStatus","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Unknown","description":"This is used for alert entities that we don't explicitly handle or they are missing.","fields":[{"name":"description","description":"Entity's description","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VehicleParking","description":"Vehicle parking represents a location where bicycles or cars can be parked.","fields":[{"name":"anyCarPlaces","description":"Does this vehicle parking have spaces (capacity) for either wheelchair accessible (disabled)\nor normal cars.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"availability","description":"The currently available spaces at this vehicle parking.","args":[],"type":{"kind":"OBJECT","name":"VehicleParkingSpaces","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bicyclePlaces","description":"Does this vehicle parking have spaces (capacity) for bicycles.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"capacity","description":"The capacity (maximum available spaces) of this vehicle parking.","args":[],"type":{"kind":"OBJECT","name":"VehicleParkingSpaces","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"carPlaces","description":"Does this vehicle parking have spaces (capacity) for cars excluding wheelchair accessible spaces.\nUse anyCarPlaces to check if any type of car may use this vehicle parking.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"detailsUrl","description":"URL which contains details of this vehicle parking.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"imageUrl","description":"URL of an image which may be displayed to the user showing the vehicle parking.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the bike park (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the bike park (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the park","args":[{"name":"language","description":"Returns name with the specified language, if found, otherwise returns with some default language.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"note","description":"A short translatable note containing details of this vehicle parking.","args":[{"name":"language","description":"Returns note with the specified language, if found, otherwise returns with some default language.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"openingHours","description":"Opening hours of the parking facility","args":[],"type":{"kind":"OBJECT","name":"OpeningHours","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtime","description":"If true, value of `spacesAvailable` is updated from a real-time source.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this vehicle parking.\nOnly ones in an OPERATIONAL state may be used for Park and Ride.","args":[],"type":{"kind":"ENUM","name":"VehicleParkingState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tags","description":"Source specific tags of the vehicle parking, which describe the available features. For example\npark_and_ride, bike_lockers, or static_osm_data.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleParkingId","description":"ID of the park","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"wheelchairAccessibleCarPlaces","description":"Does this vehicle parking have wheelchair accessible (disabled) car spaces (capacity).","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"VehicleParkingInput","description":"Preferences for parking facilities used during the routing.","fields":null,"inputFields":[{"name":"filters","description":"Selection filters to include or exclude parking facilities.\nAn empty list will include all facilities in the routing search.","type":{"kind":"LIST","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilter","ofType":null}},"defaultValue":null},{"name":"preferred","description":"If non-empty every parking facility that doesn't match this set of conditions will\nreceive an extra cost (defined by `unpreferredCost`) and therefore avoided.","type":{"kind":"LIST","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ParkingFilter","ofType":null}},"defaultValue":null},{"name":"unpreferredCost","description":"If `preferred` is non-empty, using a parking facility that doesn't contain\nat least one of the preferred conditions, will receive this extra cost and therefore avoided if\npreferred options are available.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VehicleParkingSpaces","description":"The number of spaces by type. null if unknown.","fields":[{"name":"bicycleSpaces","description":"The number of bicycle spaces.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"carSpaces","description":"The number of car spaces.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"wheelchairAccessibleCarSpaces","description":"The number of wheelchair accessible (disabled) car spaces.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"VehicleParkingState","description":"The state of the vehicle parking. TEMPORARILY_CLOSED and CLOSED are distinct states so that they\nmay be represented differently to the user.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CLOSED","description":"Can't be used for park and ride.","isDeprecated":false,"deprecationReason":null},{"name":"OPERATIONAL","description":"May be used for park and ride.","isDeprecated":false,"deprecationReason":null},{"name":"TEMPORARILY_CLOSED","description":"Can't be used for park and ride.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"VehiclePosition","description":"Real-time vehicle position","fields":[{"name":"heading","description":"Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East. This can be the\ncompass bearing, or the direction towards the next stop or intermediate location.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"label","description":"Human-readable label of the vehicle, eg. a publicly visible number or a license plate","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lastUpdated","description":"When the position of the vehicle was recorded in seconds since the UNIX epoch.","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the vehicle","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the vehicle","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"speed","description":"Speed of the vehicle in meters/second","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stopRelationship","description":"The current stop where the vehicle will be or is currently arriving.","args":[],"type":{"kind":"OBJECT","name":"StopRelationship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"trip","description":"Which trip this vehicles runs on.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Trip","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vehicleId","description":"Feed-scoped ID that uniquely identifies the vehicle in the format FeedId:VehicleId","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VehicleRentalNetwork","description":"Vehicle rental network, which is referred as system in the GBFS terminology. Note, the same operator can operate in multiple\nregions either with the same network/system or with a different one. This can contain information about either the rental brand\nor about the operator.","fields":[{"name":"networkId","description":"ID of the vehicle rental network. In GBFS, this is the `system_id` field from the system information, but it can\nbe overridden in the configuration to have a different value so this field doesn't necessarily match the source data.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The rental vehicle operator's network/system URL. In GBFS, this is the `url` field from the system information.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VehicleRentalStation","description":"Vehicle rental station represents a location where users can rent bicycles etc. for a fee.","fields":[{"name":"allowDropoff","description":"If true, vehicles can be returned to this station if the station has spaces available\nor allows overloading.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowDropoffNow","description":"If true, vehicles can be currently returned to this station.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowOverloading","description":"If true, vehicles can be returned even if spacesAvailable is zero or vehicles > capacity.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowPickup","description":"If true, vehicles can be picked up from this station if the station has vehicles available.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"allowPickupNow","description":"If true, vehicles can be currently picked up from this station.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"availableSpaces","description":"Number of free spaces currently available on the rental station, grouped by vehicle type.","args":[],"type":{"kind":"OBJECT","name":"RentalVehicleEntityCounts","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"availableVehicles","description":"Number of vehicles currently available on the rental station, grouped by vehicle type.","args":[],"type":{"kind":"OBJECT","name":"RentalVehicleEntityCounts","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"capacity","description":"Nominal capacity (number of racks) of the rental station.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"Latitude of the vehicle rental station (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"Longitude of the vehicle rental station (WGS 84)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the vehicle rental station","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"network","description":"ID of the rental network.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"Use `networkId` from `rentalNetwork` instead."},{"name":"operative","description":"If true, station is on and in service.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"realtime","description":"If true, values of `vehiclesAvailable` and `spacesAvailable` are updated from a\nreal-time source. If false, values of `vehiclesAvailable` and `spacesAvailable`\nare always the total capacity divided by two.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rentalNetwork","description":"The vehicle rental network information. This is referred as system in the GBFS terminology.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"VehicleRentalNetwork","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"rentalUris","description":"Platform-specific URLs to begin renting a vehicle from this station.","args":[],"type":{"kind":"OBJECT","name":"VehicleRentalUris","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"spacesAvailable","description":"Number of free spaces currently available on the rental station.\nNote that this value being 0 does not necessarily indicate that vehicles cannot be returned\nto this station, as for example it might be possible to leave the vehicle in the vicinity of\nthe rental station, even if the vehicle racks don't have any spaces available.\nSee field `allowDropoffNow` to know if is currently possible to return a vehicle.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":true,"deprecationReason":"Use `availableSpaces` instead, which also contains the space vehicle types"},{"name":"stationId","description":"ID of the vehicle in the format of network:id","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vehiclesAvailable","description":"Number of vehicles currently available on the rental station.\nSee field `allowPickupNow` to know if is currently possible to pick up a vehicle.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":true,"deprecationReason":"Use `availableVehicles` instead, which also contains vehicle types"}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"PlaceInterface","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VehicleRentalUris","description":null,"fields":[{"name":"android","description":"A URI that can be passed to an Android app with an {@code android.intent.action.VIEW} Android\nintent to support Android Deep Links.\nMay be null if a rental URI does not exist.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ios","description":"A URI that can be used on iOS to launch the rental app for this rental network.\nMay be {@code null} if a rental URI does not exist.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"web","description":"A URL that can be used by a web browser to show more information about renting a vehicle.\nMay be {@code null} if a rental URL does not exist.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"VehicleStopStatus","description":"How close the vehicle is to the stop.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INCOMING_AT","description":"The vehicle is just about to arrive at the stop (on a stop display, the vehicle symbol typically flashes).","isDeprecated":false,"deprecationReason":null},{"name":"IN_TRANSIT_TO","description":"The vehicle has departed the previous stop and is in transit.","isDeprecated":false,"deprecationReason":null},{"name":"STOPPED_AT","description":"The vehicle is standing at the stop.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"VertexType","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BIKEPARK","description":"BIKEPARK","isDeprecated":false,"deprecationReason":null},{"name":"BIKESHARE","description":"BIKESHARE","isDeprecated":false,"deprecationReason":null},{"name":"NORMAL","description":"NORMAL","isDeprecated":false,"deprecationReason":null},{"name":"PARKANDRIDE","description":"PARKANDRIDE","isDeprecated":false,"deprecationReason":null},{"name":"TRANSIT","description":"TRANSIT","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"WalkPreferencesInput","description":"Preferences related to walking (excluding walking a bicycle or a scooter).","fields":null,"inputFields":[{"name":"boardCost","description":"The cost of boarding a vehicle while walking.","type":{"kind":"SCALAR","name":"Cost","ofType":null},"defaultValue":null},{"name":"reluctance","description":"A multiplier for how bad walking is compared to being in transit for equal lengths of time.","type":{"kind":"SCALAR","name":"Reluctance","ofType":null},"defaultValue":null},{"name":"safetyFactor","description":"Factor for how much the walk safety is considered in routing. Value should be between 0 and 1.\nIf the value is set to be 0, safety is ignored.","type":{"kind":"SCALAR","name":"Ratio","ofType":null},"defaultValue":null},{"name":"speed","description":"Maximum walk speed on flat ground. Note, this speed is higher than the average speed\nwill be in itineraries as this is the maximum speed but there are\nfactors that slow down walking such as crossings, intersections and elevation changes.","type":{"kind":"SCALAR","name":"Speed","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"WheelchairBoarding","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NOT_POSSIBLE","description":"Wheelchair boarding is not possible at this stop.","isDeprecated":false,"deprecationReason":null},{"name":"NO_INFORMATION","description":"There is no accessibility information for the stop.","isDeprecated":false,"deprecationReason":null},{"name":"POSSIBLE","description":"At least some vehicles at this stop can be boarded by a rider in a wheelchair.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"WheelchairPreferencesInput","description":"Wheelchair related preferences. Note, this is the only from of accessibilty available\ncurrently and is sometimes is used for other accessibility needs as well.","fields":null,"inputFields":[{"name":"enabled","description":"Is wheelchair accessibility considered in routing. Note, this does not guarantee\nthat the itineraries are wheelchair accessible as there can be data issues.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":null,"fields":[{"name":"name","description":"The __Directive type represents a Directive that a server supports.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isRepeatable","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"An enum describing valid locations where a directive can be placed","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Indicates the directive is valid on queries.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Indicates the directive is valid on mutations.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Indicates the directive is valid on subscriptions.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Indicates the directive is valid on fields.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Indicates the directive is valid on fragment definitions.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Indicates the directive is valid on fragment spreads.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Indicates the directive is valid on inline fragments.","isDeprecated":false,"deprecationReason":null},{"name":"VARIABLE_DEFINITION","description":"Indicates the directive is valid on variable definitions.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Indicates the directive is valid on a schema SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Indicates the directive is valid on a scalar SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates the directive is valid on an object SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Indicates the directive is valid on a field SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Indicates the directive is valid on a field argument SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates the directive is valid on an interface SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates the directive is valid on an union SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates the directive is valid on an enum SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Indicates the directive is valid on an enum value SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates the directive is valid on an input object SDL definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Indicates the directive is valid on an input object field SDL definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":null,"fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":null,"fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"args","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":null,"fields":[{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultValue","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Introspection defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, the entry points for query, mutation, and subscription operations.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"directives","description":"'A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"'If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":null,"fields":[{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isOneOf","description":"This field is considered experimental because it has not yet been ratified in the graphql specification","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByURL","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"specifiedByUrl","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"This legacy name has been replaced by `specifiedByURL`"}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given __Type is","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar. 'specifiedByURL' is a valid field","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"debugOutput","description":null,"fields":[{"name":"pathCalculationTime","description":null,"args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"precalculationTime","description":null,"args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"renderingTime","description":null,"args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"timedOut","description":null,"args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"totalTime","description":null,"args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"elevationProfileComponent","description":null,"fields":[{"name":"distance","description":"The distance from the start of the step, in meters.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"elevation","description":"The elevation at this distance, in meters.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"fare","description":"This type is only here for backwards-compatibility and this API will never return it anymore.\nPlease use the leg's `fareProducts` instead.","fields":[{"name":"cents","description":"Fare price in cents. **Note:** this value is dependent on the currency used,\nas one cent is not necessarily ¹/₁₀₀ of the basic monerary unit.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"components","description":"Components which this fare is composed of","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"fareComponent","ofType":null}},"isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"currency","description":"ISO 4217 currency code","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"type","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"No longer supported"}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"fareComponent","description":"This type is only here for backwards-compatibility and this API will never return it anymore.\nPlease use the leg's `fareProducts` instead.","fields":[{"name":"cents","description":"Fare price in cents. **Note:** this value is dependent on the currency used,\nas one cent is not necessarily ¹/₁₀₀ of the basic monerary unit.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"currency","description":"ISO 4217 currency code","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"fareId","description":"ID of the ticket type. Corresponds to `fareId` in **TicketType**.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"No longer supported"},{"name":"routes","description":"List of routes which use this fare component","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Route","ofType":null}},"isDeprecated":true,"deprecationReason":"No longer supported"}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"placeAtDistance","description":null,"fields":[{"name":"distance","description":"Walking distance to the place along streets and paths","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"place","description":null,"args":[],"type":{"kind":"INTERFACE","name":"PlaceInterface","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"placeAtDistanceConnection","description":"A connection to a list of items.","fields":[{"name":"edges","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"placeAtDistanceEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"placeAtDistanceEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge","args":[],"type":{"kind":"OBJECT","name":"placeAtDistance","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"serviceTimeRange","description":"Time range for which the API has data available","fields":[{"name":"end","description":"Time until which the API has data available. Format: Unix timestamp in seconds","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"start","description":"Time from which the API has data available. Format: Unix timestamp in seconds","args":[],"type":{"kind":"SCALAR","name":"Long","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"step","description":null,"fields":[{"name":"absoluteDirection","description":"The cardinal (compass) direction (e.g. north, northeast) taken when engaging this step.","args":[],"type":{"kind":"ENUM","name":"AbsoluteDirection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"alerts","description":"A list of alerts (e.g. construction, detours) applicable to the step.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Alert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"area","description":"This step is on an open area, such as a plaza or train platform,\nand thus the directions should say something like \"cross\".","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bogusName","description":"The name of this street was generated by the system, so we should only display it once, and\ngenerally just display right/left directions","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"distance","description":"The distance in meters that this step takes.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"elevationProfile","description":"The elevation profile as a list of { distance, elevation } values.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"elevationProfileComponent","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"exit","description":"When exiting a highway or traffic circle, the exit name/number.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lat","description":"The latitude of the start of the step.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lon","description":"The longitude of the start of the step.","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"relativeDirection","description":"The relative direction (e.g. left or right turn) to take when engaging this step.","args":[],"type":{"kind":"ENUM","name":"RelativeDirection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"stayOn","description":"Indicates whether or not a street changes direction at an intersection.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"streetName","description":"The name of the street, road, or path taken for this step.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"walkingBike","description":"Is this step walking with a bike?","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"stopAtDistance","description":null,"fields":[{"name":"distance","description":"Walking distance to the stop along streets and paths","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"Global object ID provided by Relay. This value can be used to refetch this object using **node** query.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stop","description":null,"args":[],"type":{"kind":"OBJECT","name":"Stop","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"stopAtDistanceConnection","description":"A connection to a list of items.","fields":[{"name":"edges","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"stopAtDistanceEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"stopAtDistanceEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge","args":[],"type":{"kind":"OBJECT","name":"stopAtDistance","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null}],"directives":[{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"async","description":"Use an asynchronous data fetcher on a separate thread for this field.\n\nThis is useful when adding several queries in the same HTTP request, for example by using a batch: Those\nfields annotated with this directive run in parallel.\n\nThis is only worth it when the execution is long running, i.e. more than ~50 milliseconds, so this doesn't happen by default.","locations":["FIELD_DEFINITION"],"args":[]},{"name":"deprecated","description":"Marks the field, argument, input field or enum value as deprecated","locations":["FIELD_DEFINITION","ARGUMENT_DEFINITION","ENUM_VALUE","INPUT_FIELD_DEFINITION"],"args":[{"name":"reason","description":"The reason for the deprecation","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\"No longer supported\""}]},{"name":"oneOf","description":"Exactly one of the fields on an input object must be set and non-null while all others are omitted.","locations":["INPUT_OBJECT"],"args":[]},{"name":"specifiedBy","description":"Exposes a URL that specifies the behaviour of this scalar.","locations":["SCALAR"],"args":[{"name":"url","description":"The URL that specifies the behaviour of this scalar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}}