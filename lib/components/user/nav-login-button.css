/**
  * HACK: Override bootstrap's defaults, for the <NavLoginButton> implementation
  * inside the <Navbar> in example.js.
  * We don't want to use the rendered <NavDropDown> inside a <Nav> while in mobile mode
  * (otherwise, the menu items get displayed full screen width, which is undesirable).
  * In mobile mode, the CSS rules below let us fit the sign-in component to the top-right corner
  * and add back some of the default visuals provided by react-bootstrap's <Nav>.
  * In desktop and mobile modes, we change the link color to white for consistency with the AppMenu component.
  */

/* Locale selector dropdown width override (default bootstrap dropdown is 120px)*/
.dropdown > .dropdown-menu {
  min-width: 0px;
}

.otp.mobile .navbar .container-fluid .locale-selector-and-login {
  position: fixed;
  right: 0;
  top: 0;
}
.otp.mobile .navbar .container-fluid .locale-selector-and-login > li {
  display: inline-block;
}
.otp.mobile .navbar li.dropdown.open {
  background-color: #080808;
}

li.header {
  padding: 5px 15px;
  font-weight: 600;
}

#app-menu-locale-selector {
  display: none;
}

@media (max-width: 768px) {
  #locale-selector {
    display: none;
  }
  #app-menu-locale-selector {
    display: flex;
  }
  #user-selector-label {
    background-color: transparent;
  }
}
